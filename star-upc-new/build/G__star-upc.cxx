//
// File generated by rootcint at Wed Feb 21 15:45:02 2024

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__starmIupc
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__star-upc.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void StUPCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCTrack(void *p = 0);
   static void *newArray_StUPCTrack(Long_t size, void *p);
   static void delete_StUPCTrack(void *p);
   static void deleteArray_StUPCTrack(void *p);
   static void destruct_StUPCTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCTrack*)
   {
      ::StUPCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCTrack", ::StUPCTrack::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCTrack.h", 18,
                  typeid(::StUPCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCTrack) );
      instance.SetNew(&new_StUPCTrack);
      instance.SetNewArray(&newArray_StUPCTrack);
      instance.SetDelete(&delete_StUPCTrack);
      instance.SetDeleteArray(&deleteArray_StUPCTrack);
      instance.SetDestructor(&destruct_StUPCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCTrack*)
   {
      return GenerateInitInstanceLocal((::StUPCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCBemcCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCBemcCluster(void *p = 0);
   static void *newArray_StUPCBemcCluster(Long_t size, void *p);
   static void delete_StUPCBemcCluster(void *p);
   static void deleteArray_StUPCBemcCluster(void *p);
   static void destruct_StUPCBemcCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCBemcCluster*)
   {
      ::StUPCBemcCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCBemcCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCBemcCluster", ::StUPCBemcCluster::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCBemcCluster.h", 12,
                  typeid(::StUPCBemcCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCBemcCluster::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCBemcCluster) );
      instance.SetNew(&new_StUPCBemcCluster);
      instance.SetNewArray(&newArray_StUPCBemcCluster);
      instance.SetDelete(&delete_StUPCBemcCluster);
      instance.SetDeleteArray(&deleteArray_StUPCBemcCluster);
      instance.SetDestructor(&destruct_StUPCBemcCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCBemcCluster*)
   {
      return GenerateInitInstanceLocal((::StUPCBemcCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCBemcCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCTofHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCTofHit(void *p = 0);
   static void *newArray_StUPCTofHit(Long_t size, void *p);
   static void delete_StUPCTofHit(void *p);
   static void deleteArray_StUPCTofHit(void *p);
   static void destruct_StUPCTofHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCTofHit*)
   {
      ::StUPCTofHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCTofHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCTofHit", ::StUPCTofHit::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCTofHit.h", 13,
                  typeid(::StUPCTofHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCTofHit::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCTofHit) );
      instance.SetNew(&new_StUPCTofHit);
      instance.SetNewArray(&newArray_StUPCTofHit);
      instance.SetDelete(&delete_StUPCTofHit);
      instance.SetDeleteArray(&deleteArray_StUPCTofHit);
      instance.SetDestructor(&destruct_StUPCTofHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCTofHit*)
   {
      return GenerateInitInstanceLocal((::StUPCTofHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCTofHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCVertex(void *p = 0);
   static void *newArray_StUPCVertex(Long_t size, void *p);
   static void delete_StUPCVertex(void *p);
   static void deleteArray_StUPCVertex(void *p);
   static void destruct_StUPCVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCVertex*)
   {
      ::StUPCVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCVertex", ::StUPCVertex::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCVertex.h", 12,
                  typeid(::StUPCVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCVertex::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCVertex) );
      instance.SetNew(&new_StUPCVertex);
      instance.SetNewArray(&newArray_StUPCVertex);
      instance.SetDelete(&delete_StUPCVertex);
      instance.SetDeleteArray(&deleteArray_StUPCVertex);
      instance.SetDestructor(&destruct_StUPCVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCVertex*)
   {
      return GenerateInitInstanceLocal((::StUPCVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCEvent(void *p = 0);
   static void *newArray_StUPCEvent(Long_t size, void *p);
   static void delete_StUPCEvent(void *p);
   static void deleteArray_StUPCEvent(void *p);
   static void destruct_StUPCEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCEvent*)
   {
      ::StUPCEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCEvent", ::StUPCEvent::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCEvent.h", 20,
                  typeid(::StUPCEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCEvent::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCEvent) );
      instance.SetNew(&new_StUPCEvent);
      instance.SetNewArray(&newArray_StUPCEvent);
      instance.SetDelete(&delete_StUPCEvent);
      instance.SetDeleteArray(&deleteArray_StUPCEvent);
      instance.SetDestructor(&destruct_StUPCEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCEvent*)
   {
      return GenerateInitInstanceLocal((::StUPCEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCRpsCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCRpsCluster(void *p = 0);
   static void *newArray_StUPCRpsCluster(Long_t size, void *p);
   static void delete_StUPCRpsCluster(void *p);
   static void deleteArray_StUPCRpsCluster(void *p);
   static void destruct_StUPCRpsCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCRpsCluster*)
   {
      ::StUPCRpsCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCRpsCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCRpsCluster", ::StUPCRpsCluster::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCRpsCluster.h", 14,
                  typeid(::StUPCRpsCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCRpsCluster::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCRpsCluster) );
      instance.SetNew(&new_StUPCRpsCluster);
      instance.SetNewArray(&newArray_StUPCRpsCluster);
      instance.SetDelete(&delete_StUPCRpsCluster);
      instance.SetDeleteArray(&deleteArray_StUPCRpsCluster);
      instance.SetDestructor(&destruct_StUPCRpsCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCRpsCluster*)
   {
      return GenerateInitInstanceLocal((::StUPCRpsCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCRpsCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCRpsTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCRpsTrack(void *p = 0);
   static void *newArray_StUPCRpsTrack(Long_t size, void *p);
   static void delete_StUPCRpsTrack(void *p);
   static void deleteArray_StUPCRpsTrack(void *p);
   static void destruct_StUPCRpsTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCRpsTrack*)
   {
      ::StUPCRpsTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCRpsTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCRpsTrack", ::StUPCRpsTrack::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCRpsTrack.h", 19,
                  typeid(::StUPCRpsTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCRpsTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCRpsTrack) );
      instance.SetNew(&new_StUPCRpsTrack);
      instance.SetNewArray(&newArray_StUPCRpsTrack);
      instance.SetDelete(&delete_StUPCRpsTrack);
      instance.SetDeleteArray(&deleteArray_StUPCRpsTrack);
      instance.SetDestructor(&destruct_StUPCRpsTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCRpsTrack*)
   {
      return GenerateInitInstanceLocal((::StUPCRpsTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCRpsTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCRpsTrackPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCRpsTrackPoint(void *p = 0);
   static void *newArray_StUPCRpsTrackPoint(Long_t size, void *p);
   static void delete_StUPCRpsTrackPoint(void *p);
   static void deleteArray_StUPCRpsTrackPoint(void *p);
   static void destruct_StUPCRpsTrackPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCRpsTrackPoint*)
   {
      ::StUPCRpsTrackPoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCRpsTrackPoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCRpsTrackPoint", ::StUPCRpsTrackPoint::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCRpsTrackPoint.h", 14,
                  typeid(::StUPCRpsTrackPoint), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCRpsTrackPoint::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCRpsTrackPoint) );
      instance.SetNew(&new_StUPCRpsTrackPoint);
      instance.SetNewArray(&newArray_StUPCRpsTrackPoint);
      instance.SetDelete(&delete_StUPCRpsTrackPoint);
      instance.SetDeleteArray(&deleteArray_StUPCRpsTrackPoint);
      instance.SetDestructor(&destruct_StUPCRpsTrackPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCRpsTrackPoint*)
   {
      return GenerateInitInstanceLocal((::StUPCRpsTrackPoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCRpsTrackPoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StRPEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StRPEvent(void *p = 0);
   static void *newArray_StRPEvent(Long_t size, void *p);
   static void delete_StRPEvent(void *p);
   static void deleteArray_StRPEvent(void *p);
   static void destruct_StRPEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StRPEvent*)
   {
      ::StRPEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRPEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRPEvent", ::StRPEvent::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StRPEvent.h", 20,
                  typeid(::StRPEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StRPEvent::Dictionary, isa_proxy, 4,
                  sizeof(::StRPEvent) );
      instance.SetNew(&new_StRPEvent);
      instance.SetNewArray(&newArray_StRPEvent);
      instance.SetDelete(&delete_StRPEvent);
      instance.SetDeleteArray(&deleteArray_StRPEvent);
      instance.SetDestructor(&destruct_StRPEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StRPEvent*)
   {
      return GenerateInitInstanceLocal((::StRPEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRPEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StPicoHelix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StPicoHelix(void *p = 0);
   static void *newArray_StPicoHelix(Long_t size, void *p);
   static void delete_StPicoHelix(void *p);
   static void deleteArray_StPicoHelix(void *p);
   static void destruct_StPicoHelix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StPicoHelix*)
   {
      ::StPicoHelix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StPicoHelix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StPicoHelix", ::StPicoHelix::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StPicoHelix.h", 34,
                  typeid(::StPicoHelix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StPicoHelix::Dictionary, isa_proxy, 4,
                  sizeof(::StPicoHelix) );
      instance.SetNew(&new_StPicoHelix);
      instance.SetNewArray(&newArray_StPicoHelix);
      instance.SetDelete(&delete_StPicoHelix);
      instance.SetDeleteArray(&deleteArray_StPicoHelix);
      instance.SetDestructor(&destruct_StPicoHelix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StPicoHelix*)
   {
      return GenerateInitInstanceLocal((::StPicoHelix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StPicoHelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StPicoPhysicalHelix_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StPicoPhysicalHelix(void *p = 0);
   static void *newArray_StPicoPhysicalHelix(Long_t size, void *p);
   static void delete_StPicoPhysicalHelix(void *p);
   static void deleteArray_StPicoPhysicalHelix(void *p);
   static void destruct_StPicoPhysicalHelix(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StPicoPhysicalHelix*)
   {
      ::StPicoPhysicalHelix *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StPicoPhysicalHelix >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StPicoPhysicalHelix", ::StPicoPhysicalHelix::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StPicoPhysicalHelix.h", 22,
                  typeid(::StPicoPhysicalHelix), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StPicoPhysicalHelix::Dictionary, isa_proxy, 4,
                  sizeof(::StPicoPhysicalHelix) );
      instance.SetNew(&new_StPicoPhysicalHelix);
      instance.SetNewArray(&newArray_StPicoPhysicalHelix);
      instance.SetDelete(&delete_StPicoPhysicalHelix);
      instance.SetDeleteArray(&deleteArray_StPicoPhysicalHelix);
      instance.SetDestructor(&destruct_StPicoPhysicalHelix);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StPicoPhysicalHelix*)
   {
      return GenerateInitInstanceLocal((::StPicoPhysicalHelix*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StPicoPhysicalHelix*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StUPCV0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StUPCV0(void *p = 0);
   static void *newArray_StUPCV0(Long_t size, void *p);
   static void delete_StUPCV0(void *p);
   static void deleteArray_StUPCV0(void *p);
   static void destruct_StUPCV0(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StUPCV0*)
   {
      ::StUPCV0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StUPCV0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StUPCV0", ::StUPCV0::Class_Version(), "/star/u/adamczyk/STAR-Analysis/star-upc-new/include/StUPCV0.h", 30,
                  typeid(::StUPCV0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StUPCV0::Dictionary, isa_proxy, 4,
                  sizeof(::StUPCV0) );
      instance.SetNew(&new_StUPCV0);
      instance.SetNewArray(&newArray_StUPCV0);
      instance.SetDelete(&delete_StUPCV0);
      instance.SetDeleteArray(&deleteArray_StUPCV0);
      instance.SetDestructor(&destruct_StUPCV0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StUPCV0*)
   {
      return GenerateInitInstanceLocal((::StUPCV0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StUPCV0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr StUPCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCTrack::Class_Name()
{
   return "StUPCTrack";
}

//______________________________________________________________________________
const char *StUPCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCBemcCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCBemcCluster::Class_Name()
{
   return "StUPCBemcCluster";
}

//______________________________________________________________________________
const char *StUPCBemcCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCBemcCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCBemcCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCBemcCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCBemcCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCBemcCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCBemcCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCBemcCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCTofHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCTofHit::Class_Name()
{
   return "StUPCTofHit";
}

//______________________________________________________________________________
const char *StUPCTofHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTofHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCTofHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTofHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCTofHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTofHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCTofHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCTofHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCVertex::Class_Name()
{
   return "StUPCVertex";
}

//______________________________________________________________________________
const char *StUPCVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCVertex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCEvent::Class_Name()
{
   return "StUPCEvent";
}

//______________________________________________________________________________
const char *StUPCEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCRpsCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCRpsCluster::Class_Name()
{
   return "StUPCRpsCluster";
}

//______________________________________________________________________________
const char *StUPCRpsCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCRpsCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCRpsCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCRpsCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCRpsTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCRpsTrack::Class_Name()
{
   return "StUPCRpsTrack";
}

//______________________________________________________________________________
const char *StUPCRpsTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCRpsTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCRpsTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCRpsTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCRpsTrackPoint::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCRpsTrackPoint::Class_Name()
{
   return "StUPCRpsTrackPoint";
}

//______________________________________________________________________________
const char *StUPCRpsTrackPoint::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrackPoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCRpsTrackPoint::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrackPoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCRpsTrackPoint::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrackPoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCRpsTrackPoint::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCRpsTrackPoint*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StRPEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StRPEvent::Class_Name()
{
   return "StRPEvent";
}

//______________________________________________________________________________
const char *StRPEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRPEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRPEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StRPEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRPEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRPEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRPEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StRPEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StPicoHelix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StPicoHelix::Class_Name()
{
   return "StPicoHelix";
}

//______________________________________________________________________________
const char *StPicoHelix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoHelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StPicoHelix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoHelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StPicoHelix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoHelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StPicoHelix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoHelix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StPicoPhysicalHelix::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StPicoPhysicalHelix::Class_Name()
{
   return "StPicoPhysicalHelix";
}

//______________________________________________________________________________
const char *StPicoPhysicalHelix::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoPhysicalHelix*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StPicoPhysicalHelix::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoPhysicalHelix*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StPicoPhysicalHelix::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoPhysicalHelix*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StPicoPhysicalHelix::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StPicoPhysicalHelix*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StUPCV0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StUPCV0::Class_Name()
{
   return "StUPCV0";
}

//______________________________________________________________________________
const char *StUPCV0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCV0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StUPCV0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCV0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StUPCV0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCV0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StUPCV0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StUPCV0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void StUPCEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCEvent::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCEvent.
      TClass *R__cl = ::StUPCEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrgIDs", &mTrgIDs);
      R__insp.InspectMember(mTrgIDs, "mTrgIDs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunNum", &mRunNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvtNum", &mEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFillNum", &mFillNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbCrossId", &mbCrossId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbCrossId7bit", &mbCrossId7bit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMagField", &mMagField);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamXPosition", &mBeamXPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamXSlope", &mBeamXSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamYPosition", &mBeamYPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBeamYSlope", &mBeamYSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcEastRate", &mZdcEastRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcWestRate", &mZdcWestRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcCoincRate", &mZdcCoincRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLastDSM0", &mLastDSM0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLastDSM1", &mLastDSM1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLastDSM3", &mLastDSM3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcEastUA", &mZdcEastUA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcWestUA", &mZdcWestUA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcEastADC[3]", mZdcEastADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcWestADC[3]", mZdcWestADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcEastTDC", &mZdcEastTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcWestTDC", &mZdcWestTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcTimeDiff", &mZdcTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcVertexZ", &mZdcVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcSmdEast[16]", mZdcSmdEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mZdcSmdWest[16]", mZdcSmdWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBBCSmallEast", &mBBCSmallEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBBCSmallWest", &mBBCSmallWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBBCLargeEast", &mBBCLargeEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBBCLargeWest", &mBBCLargeWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDSumEast", &mVPDSumEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDSumWest", &mVPDSumWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVPDTimeDiff", &mVPDTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofMult", &mTofMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcMult", &mBemcMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNGlobTracks", &mNGlobTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNPrimTracks", &mNPrimTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNPrimVertices", &mNPrimVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUPCTracks", &mUPCTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNtracks", &mNtracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUPCBemcClusters", &mUPCBemcClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNclusters", &mNclusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUPCTOFHits", &mUPCTOFHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNhits", &mNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mUPCVertices", &mUPCVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNvertices", &mNvertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMCParticles", &mMCParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNmc", &mNmc);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUPCEvent : new ::StUPCEvent;
   }
   static void *newArray_StUPCEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StUPCEvent[nElements] : new ::StUPCEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCEvent(void *p) {
      delete ((::StUPCEvent*)p);
   }
   static void deleteArray_StUPCEvent(void *p) {
      delete [] ((::StUPCEvent*)p);
   }
   static void destruct_StUPCEvent(void *p) {
      typedef ::StUPCEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCEvent

//______________________________________________________________________________
void StUPCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCTrack.
      TClass *R__cl = ::StUPCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFlags", &mFlags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPt", &mPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEta", &mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCurvature", &mCurvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDipAngle", &mDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhase", &mPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrigin", &mOrigin);
      R__insp.InspectMember(mOrigin, "mOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDcaXY", &mDcaXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDcaZ", &mDcaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCharge", &mCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNhits", &mNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNhitsFit", &mNhitsFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChi2", &mChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNhitsDEdx", &mNhitsDEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDEdxSignal", &mDEdxSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNSigmasTPC[4]", mNSigmasTPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcPt", &mBemcPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcEta", &mBemcEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcPhi", &mBemcPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcClsId", &mBemcClsId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBemcHitE", &mBemcHitE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofTime", &mTofTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTofPathLength", &mTofPathLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mVtxId", &mVtxId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvt", &mEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIdTruth", &mIdTruth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQATruth", &mQATruth);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCTrack(void *p) {
      return  p ? new(p) ::StUPCTrack : new ::StUPCTrack;
   }
   static void *newArray_StUPCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCTrack[nElements] : new ::StUPCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCTrack(void *p) {
      delete ((::StUPCTrack*)p);
   }
   static void deleteArray_StUPCTrack(void *p) {
      delete [] ((::StUPCTrack*)p);
   }
   static void destruct_StUPCTrack(void *p) {
      typedef ::StUPCTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCTrack

//______________________________________________________________________________
void StUPCBemcCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCBemcCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCBemcCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCBemcCluster::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCBemcCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCBemcCluster.
      TClass *R__cl = ::StUPCBemcCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEta", &mEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSigmaEta", &mSigmaEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSigmaPhi", &mSigmaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergy", &mEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHTEnergy", &mHTEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHTsoftID", &mHTsoftID);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCBemcCluster(void *p) {
      return  p ? new(p) ::StUPCBemcCluster : new ::StUPCBemcCluster;
   }
   static void *newArray_StUPCBemcCluster(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCBemcCluster[nElements] : new ::StUPCBemcCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCBemcCluster(void *p) {
      delete ((::StUPCBemcCluster*)p);
   }
   static void deleteArray_StUPCBemcCluster(void *p) {
      delete [] ((::StUPCBemcCluster*)p);
   }
   static void destruct_StUPCBemcCluster(void *p) {
      typedef ::StUPCBemcCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCBemcCluster

//______________________________________________________________________________
void StUPCVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCVertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCVertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCVertex::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCVertex.
      TClass *R__cl = ::StUPCVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosX", &mPosX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosY", &mPosY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosZ", &mPosZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mErrX", &mErrX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mErrY", &mErrY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mErrZ", &mErrZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNPrimaryTracks", &mNPrimaryTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNTracksUsed", &mNTracksUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCVertex(void *p) {
      return  p ? new(p) ::StUPCVertex : new ::StUPCVertex;
   }
   static void *newArray_StUPCVertex(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCVertex[nElements] : new ::StUPCVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCVertex(void *p) {
      delete ((::StUPCVertex*)p);
   }
   static void deleteArray_StUPCVertex(void *p) {
      delete [] ((::StUPCVertex*)p);
   }
   static void destruct_StUPCVertex(void *p) {
      typedef ::StUPCVertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCVertex

//______________________________________________________________________________
void StRPEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRPEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRPEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRPEvent::Class(),this);
   }
}

//______________________________________________________________________________
void StRPEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StRPEvent.
      TClass *R__cl = ::StRPEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOffsetPlane[8][4]", mOffsetPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mzPlane[8][4]", mzPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAnglePlane[8][4]", mAnglePlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrientationPlane[8][4]", mOrientationPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberPlanesWithCluster[8]", mNumberPlanesWithCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mADC[8][2]", mADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTAC[8][2]", mTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberPlanes[8]", mNumberPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatusPlane[8][4]", mStatusPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSiliconBunch", &mSiliconBunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatusRomanPot[8]", mStatusRomanPot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mClusters", &mClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNClusters", &mNClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTracks", &mTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNTracks", &mNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTrackPoints", &mTrackPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNTrackPoints", &mNTrackPoints);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StRPEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRPEvent : new ::StRPEvent;
   }
   static void *newArray_StRPEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRPEvent[nElements] : new ::StRPEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRPEvent(void *p) {
      delete ((::StRPEvent*)p);
   }
   static void deleteArray_StRPEvent(void *p) {
      delete [] ((::StRPEvent*)p);
   }
   static void destruct_StRPEvent(void *p) {
      typedef ::StRPEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StRPEvent

//______________________________________________________________________________
void StUPCRpsTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCRpsTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCRpsTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCRpsTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCRpsTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCRpsTrack.
      TClass *R__cl = ::StUPCRpsTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFirstTrackPointId", &mFirstTrackPointId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSecondTrackPointId", &mSecondTrackPointId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mP", &mP);
      R__insp.InspectMember(mP, "mP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mType", &mType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBranch", &mBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvt", &mEvt);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCRpsTrack(void *p) {
      return  p ? new(p) ::StUPCRpsTrack : new ::StUPCRpsTrack;
   }
   static void *newArray_StUPCRpsTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCRpsTrack[nElements] : new ::StUPCRpsTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCRpsTrack(void *p) {
      delete ((::StUPCRpsTrack*)p);
   }
   static void deleteArray_StUPCRpsTrack(void *p) {
      delete [] ((::StUPCRpsTrack*)p);
   }
   static void destruct_StUPCRpsTrack(void *p) {
      typedef ::StUPCRpsTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCRpsTrack

//______________________________________________________________________________
void StUPCRpsTrackPoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCRpsTrackPoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCRpsTrackPoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCRpsTrackPoint::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCRpsTrackPoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCRpsTrackPoint.
      TClass *R__cl = ::StUPCRpsTrackPoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTime[2]", mTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRpId", &mRpId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mClusterId[4]", mClusterId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosition", &mPosition);
      R__insp.InspectMember(mPosition, "mPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuality", &mQuality);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCRpsTrackPoint(void *p) {
      return  p ? new(p) ::StUPCRpsTrackPoint : new ::StUPCRpsTrackPoint;
   }
   static void *newArray_StUPCRpsTrackPoint(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCRpsTrackPoint[nElements] : new ::StUPCRpsTrackPoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCRpsTrackPoint(void *p) {
      delete ((::StUPCRpsTrackPoint*)p);
   }
   static void deleteArray_StUPCRpsTrackPoint(void *p) {
      delete [] ((::StUPCRpsTrackPoint*)p);
   }
   static void destruct_StUPCRpsTrackPoint(void *p) {
      typedef ::StUPCRpsTrackPoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCRpsTrackPoint

//______________________________________________________________________________
void StUPCRpsCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCRpsCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCRpsCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCRpsCluster::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCRpsCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCRpsCluster.
      TClass *R__cl = ::StUPCRpsCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPosition", &mPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPositionRMS", &mPositionRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergy", &mEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mXY", &mXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLength", &mLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuality", &mQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPlaneId", &mPlaneId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRomanPotId", &mRomanPotId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCRpsCluster(void *p) {
      return  p ? new(p) ::StUPCRpsCluster : new ::StUPCRpsCluster;
   }
   static void *newArray_StUPCRpsCluster(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCRpsCluster[nElements] : new ::StUPCRpsCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCRpsCluster(void *p) {
      delete ((::StUPCRpsCluster*)p);
   }
   static void deleteArray_StUPCRpsCluster(void *p) {
      delete [] ((::StUPCRpsCluster*)p);
   }
   static void destruct_StUPCRpsCluster(void *p) {
      typedef ::StUPCRpsCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCRpsCluster

//______________________________________________________________________________
void StUPCTofHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCTofHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCTofHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCTofHit::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCTofHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCTofHit.
      TClass *R__cl = ::StUPCTofHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTray", &mTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mModule", &mModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCell", &mCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLeadingEdgeTime", &mLeadingEdgeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrailingEdgeTime", &mTrailingEdgeTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCTofHit(void *p) {
      return  p ? new(p) ::StUPCTofHit : new ::StUPCTofHit;
   }
   static void *newArray_StUPCTofHit(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCTofHit[nElements] : new ::StUPCTofHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCTofHit(void *p) {
      delete ((::StUPCTofHit*)p);
   }
   static void deleteArray_StUPCTofHit(void *p) {
      delete [] ((::StUPCTofHit*)p);
   }
   static void destruct_StUPCTofHit(void *p) {
      typedef ::StUPCTofHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCTofHit

//______________________________________________________________________________
void StUPCV0::Streamer(TBuffer &R__b)
{
   // Stream an object of class StUPCV0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StUPCV0::Class(),this);
   } else {
      R__b.WriteClassBuffer(StUPCV0::Class(),this);
   }
}

//______________________________________________________________________________
void StUPCV0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StUPCV0.
      TClass *R__cl = ::StUPCV0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLorentzVector", &mLorentzVector);
      R__insp.InspectMember(mLorentzVector, "mLorentzVector.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDecayVertex", &mDecayVertex);
      R__insp.InspectMember(mDecayVertex, "mDecayVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mProdPlane", &mProdPlane);
      R__insp.InspectMember(mProdPlane, "mProdPlane.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDCABeamLine", &mDCABeamLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mProdVertexHypo", &mProdVertexHypo);
      R__insp.InspectMember(mProdVertexHypo, "mProdVertexHypo.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointingAngleHypo", &mPointingAngleHypo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDecayLengthHypo", &mDecayLengthHypo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPointingAngle", &mPointingAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDecayLength", &mDecayLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticle1Dca", &mParticle1Dca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticle2Dca", &mParticle2Dca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDcaToPrimaryVertex", &mDcaToPrimaryVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticle1Idx", &mParticle1Idx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mParticle2Idx", &mParticle2Idx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDcaDaughters", &mDcaDaughters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCosThetaStar", &mCosThetaStar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThetaProdPlane", &mThetaProdPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAlphaAP", &mAlphaAP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPtAP", &mPtAP);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StUPCV0(void *p) {
      return  p ? new(p) ::StUPCV0 : new ::StUPCV0;
   }
   static void *newArray_StUPCV0(Long_t nElements, void *p) {
      return p ? new(p) ::StUPCV0[nElements] : new ::StUPCV0[nElements];
   }
   // Wrapper around operator delete
   static void delete_StUPCV0(void *p) {
      delete ((::StUPCV0*)p);
   }
   static void deleteArray_StUPCV0(void *p) {
      delete [] ((::StUPCV0*)p);
   }
   static void destruct_StUPCV0(void *p) {
      typedef ::StUPCV0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StUPCV0

//______________________________________________________________________________
void StPicoPhysicalHelix::Streamer(TBuffer &R__b)
{
   // Stream an object of class StPicoPhysicalHelix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StPicoPhysicalHelix::Class(),this);
   } else {
      R__b.WriteClassBuffer(StPicoPhysicalHelix::Class(),this);
   }
}

//______________________________________________________________________________
void StPicoPhysicalHelix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StPicoPhysicalHelix.
      TClass *R__cl = ::StPicoPhysicalHelix::IsA();
      if (R__cl || R__insp.IsA()) { }
      StPicoHelix::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StPicoPhysicalHelix(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPicoPhysicalHelix : new ::StPicoPhysicalHelix;
   }
   static void *newArray_StPicoPhysicalHelix(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPicoPhysicalHelix[nElements] : new ::StPicoPhysicalHelix[nElements];
   }
   // Wrapper around operator delete
   static void delete_StPicoPhysicalHelix(void *p) {
      delete ((::StPicoPhysicalHelix*)p);
   }
   static void deleteArray_StPicoPhysicalHelix(void *p) {
      delete [] ((::StPicoPhysicalHelix*)p);
   }
   static void destruct_StPicoPhysicalHelix(void *p) {
      typedef ::StPicoPhysicalHelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StPicoPhysicalHelix

//______________________________________________________________________________
void StPicoHelix::Streamer(TBuffer &R__b)
{
   // Stream an object of class StPicoHelix.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StPicoHelix::Class(),this);
   } else {
      R__b.WriteClassBuffer(StPicoHelix::Class(),this);
   }
}

//______________________________________________________________________________
void StPicoHelix::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StPicoHelix.
      TClass *R__cl = ::StPicoHelix::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSingularity", &mSingularity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOrigin", &mOrigin);
      R__insp.InspectMember(mOrigin, "mOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDipAngle", &mDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCurvature", &mCurvature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhase", &mPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mH", &mH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCosDipAngle", &mCosDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSinDipAngle", &mSinDipAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCosPhase", &mCosPhase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSinPhase", &mSinPhase);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StPicoHelix(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPicoHelix : new ::StPicoHelix;
   }
   static void *newArray_StPicoHelix(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StPicoHelix[nElements] : new ::StPicoHelix[nElements];
   }
   // Wrapper around operator delete
   static void delete_StPicoHelix(void *p) {
      delete ((::StPicoHelix*)p);
   }
   static void deleteArray_StPicoHelix(void *p) {
      delete [] ((::StPicoHelix*)p);
   }
   static void destruct_StPicoHelix(void *p) {
      typedef ::StPicoHelix current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::StPicoHelix

/********************************************************
* G__star-upc.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__starmIupc();

extern "C" void G__set_cpp_environmentG__starmIupc() {
  G__cpp_reset_tagtableG__starmIupc();
}
#include <new>
extern "C" int G__cpp_dllrevG__starmIupc() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StUPCTrack */
static int G__G__starmIupc_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCTrack[n];
     } else {
       p = new((void*) gvp) StUPCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCTrack;
     } else {
       p = new((void*) gvp) StUPCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setFlag((StUPCTrack::Flag) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setPtEtaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setCurvatureDipAnglePhase((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setOrigin(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setDcaXY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setDcaZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setCharge((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setNhits((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setNhitsFit((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setNhitsDEdx((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setDEdxSignal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setNSigmasTPC((StUPCTrack::Part) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setBemcPtEtaPhi((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setBemcClusterId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setBemcHitE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setTofTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setTofPathLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setVertexId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setEvent((StUPCEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setIdTruth((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->setQaTruth((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StUPCTrack*) G__getstructoffset())->getFlag((StUPCTrack::Flag) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StUPCTrack*) G__getstructoffset())->getPtEtaPhi(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StUPCTrack*) G__getstructoffset())->getLorentzVector(*(TLorentzVector*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StUPCTrack*) G__getstructoffset())->getMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getCurvature());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getDipAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getPhase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StUPCTrack*) G__getstructoffset())->getOrigin();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getDcaXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getDcaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StUPCTrack*) G__getstructoffset())->getCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCTrack*) G__getstructoffset())->getNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCTrack*) G__getstructoffset())->getNhitsFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCTrack*) G__getstructoffset())->getNhitsDEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getDEdxSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getNSigmasTPC((StUPCTrack::Part) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getNSigmasTPCElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getNSigmasTPCPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getNSigmasTPCKaon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getNSigmasTPCProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StUPCTrack*) G__getstructoffset())->getBemcPtEtaPhi(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getBemcPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getBemcEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getBemcPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTrack*) G__getstructoffset())->getBemcPmag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCTrack*) G__getstructoffset())->getBemcClusterId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getBemcHitE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCTrack*) G__getstructoffset())->getBemcCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StUPCTrack*) G__getstructoffset())->getBemcLorentzVector(*(TLorentzVector*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getTofTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCTrack*) G__getstructoffset())->getTofPathLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCTrack*) G__getstructoffset())->getVertexId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCTrack*) G__getstructoffset())->getVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCTrack*) G__getstructoffset())->getEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCTrack*) G__getstructoffset())->getIdTruth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCTrack*) G__getstructoffset())->getQaTruth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_172_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCTrack G__TStUPCTrack;
static int G__G__starmIupc_172_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCTrack*) (soff+(sizeof(StUPCTrack)*i)))->~G__TStUPCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCTrack*) (soff))->~G__TStUPCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCBemcCluster */
static int G__G__starmIupc_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCBemcCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCBemcCluster[n];
     } else {
       p = new((void*) gvp) StUPCBemcCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCBemcCluster;
     } else {
       p = new((void*) gvp) StUPCBemcCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setSigmaEta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setSigmaPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setHTEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->setHTsoftID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getSigmaEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getSigmaPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCBemcCluster*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCBemcCluster*) G__getstructoffset())->getHTEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCBemcCluster*) G__getstructoffset())->getHTsoftID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCBemcCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCBemcCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCBemcCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCBemcCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCBemcCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCBemcCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCBemcCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCBemcCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_173_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCBemcCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCBemcCluster G__TStUPCBemcCluster;
static int G__G__starmIupc_173_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCBemcCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCBemcCluster*) (soff+(sizeof(StUPCBemcCluster)*i)))->~G__TStUPCBemcCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCBemcCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCBemcCluster*) (soff))->~G__TStUPCBemcCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCTofHit */
static int G__G__starmIupc_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCTofHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCTofHit[n];
     } else {
       p = new((void*) gvp) StUPCTofHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCTofHit;
     } else {
       p = new((void*) gvp) StUPCTofHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->setTray((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->setModule((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->setCell((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->setLeadingEdgeTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->setTrailingEdgeTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StUPCTofHit*) G__getstructoffset())->getTray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StUPCTofHit*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StUPCTofHit*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTofHit*) G__getstructoffset())->getLeadingEdgeTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCTofHit*) G__getstructoffset())->getTrailingEdgeTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCTofHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTofHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCTofHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCTofHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCTofHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTofHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCTofHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCTofHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCTofHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCTofHit G__TStUPCTofHit;
static int G__G__starmIupc_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCTofHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCTofHit*) (soff+(sizeof(StUPCTofHit)*i)))->~G__TStUPCTofHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCTofHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCTofHit*) (soff))->~G__TStUPCTofHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCVertex */
static int G__G__starmIupc_176_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCVertex[n];
     } else {
       p = new((void*) gvp) StUPCVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCVertex;
     } else {
       p = new((void*) gvp) StUPCVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setPosX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setPosY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setPosZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setErrX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setErrY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setErrZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setNPrimaryTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setNTracksUsed((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->setId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getPosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getPosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getPosZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getErrX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getErrY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCVertex*) G__getstructoffset())->getErrZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCVertex*) G__getstructoffset())->getNPrimaryTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCVertex*) G__getstructoffset())->getNTracksUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCVertex*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_176_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCVertex G__TStUPCVertex;
static int G__G__starmIupc_176_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCVertex*) (soff+(sizeof(StUPCVertex)*i)))->~G__TStUPCVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCVertex*) (soff))->~G__TStUPCVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCEvent */
static int G__G__starmIupc_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCEvent[n];
     } else {
       p = new((void*) gvp) StUPCEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCEvent;
     } else {
       p = new((void*) gvp) StUPCEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StUPCEvent& obj = ((StUPCEvent*) G__getstructoffset())->operator=(*(StUPCEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->clearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->addTriggerId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setRunNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setEventNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setFillNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBunchCrossId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBunchCrossId7bit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setMagneticField((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBeamXPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBeamXSlope((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBeamYPosition((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBeamYSlope((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCEastRate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCWestRate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCCoincRate((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setLastDSM0((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setLastDSM1((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setLastDSM3((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCUnAttEast((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCUnAttWest((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCEastADC((UShort_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCWestADC((UShort_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCEastTDC((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCWestTDC((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZDCTimeDiff((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZdcVertexZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZdcSMDEast((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setZdcSMDWest((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBBCSmallEast((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBBCSmallWest((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBBCLargeEast((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBBCLargeWest((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setVPDSumEast((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setVPDSumWest((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setVPDTimeDiff((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setTOFMultiplicity((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setBEMCMultiplicity((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setNGlobTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setNPrimTracks((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->setNPrimVertices((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StUPCEvent*) G__getstructoffset())->addTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StUPCEvent*) G__getstructoffset())->addCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StUPCEvent*) G__getstructoffset())->addHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StUPCEvent*) G__getstructoffset())->addVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StUPCEvent*) G__getstructoffset())->setIsMC((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StUPCEvent*) G__getstructoffset())->setIsMC();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StUPCEvent*) G__getstructoffset())->addMCParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getTriggerArraySize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getTriggerID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StUPCEvent*) G__getstructoffset())->isTrigger((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getFillNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBunchCrossId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBunchCrossId7bit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getMagneticField());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getBeamXPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getBeamXSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getBeamYPosition());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getBeamYSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getZDCEastRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getZDCWestRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCEvent*) G__getstructoffset())->getZDCCoincRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getLastDSM0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getLastDSM1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getLastDSM3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCUnAttEast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCUnAttWest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCEastADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCWestADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCEastTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCWestTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZDCTimeDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCEvent*) G__getstructoffset())->getZdcVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZdcSMDEast((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getZdcSMDWest((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBBCSmallEast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBBCSmallWest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBBCLargeEast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBBCLargeWest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getVPDSumEast());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getVPDSumWest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getVPDTimeDiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCEvent*) G__getstructoffset())->getTOFMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getBEMCMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNGlobTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNPrimTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCEvent*) G__getstructoffset())->getNPrimVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNumberOfTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNumberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getCluster((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getClusterId((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->makeClustersIter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNumberOfHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNumberOfVertices());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getVertex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getVertexId((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->makeVerticesIter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StUPCEvent*) G__getstructoffset())->getIsMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCEvent*) G__getstructoffset())->getNumberOfMCParticles());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->getMCParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_180_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCEvent G__TStUPCEvent;
static int G__G__starmIupc_180_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCEvent*) (soff+(sizeof(StUPCEvent)*i)))->~G__TStUPCEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCEvent*) (soff))->~G__TStUPCEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCRpsCluster */
static int G__G__starmIupc_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCRpsCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsCluster[n];
     } else {
       p = new((void*) gvp) StUPCRpsCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsCluster;
     } else {
       p = new((void*) gvp) StUPCRpsCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsCluster*) G__getstructoffset())->position());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsCluster*) G__getstructoffset())->positionRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StUPCRpsCluster*) G__getstructoffset())->length());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsCluster*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsCluster*) G__getstructoffset())->xy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StUPCRpsCluster*) G__getstructoffset())->quality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCRpsCluster*) G__getstructoffset())->romanPotId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCRpsCluster*) G__getstructoffset())->planeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setPosition((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setPositionRMS((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setLength((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setXY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setQuality((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setPlaneId((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->setRomanPotId((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCRpsCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCRpsCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCRpsCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_237_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIupc_237_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StUPCRpsCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StUPCRpsCluster(*(StUPCRpsCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCRpsCluster G__TStUPCRpsCluster;
static int G__G__starmIupc_237_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCRpsCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCRpsCluster*) (soff+(sizeof(StUPCRpsCluster)*i)))->~G__TStUPCRpsCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCRpsCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCRpsCluster*) (soff))->~G__TStUPCRpsCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIupc_237_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCRpsCluster* dest = (StUPCRpsCluster*) G__getstructoffset();
   *dest = *(StUPCRpsCluster*) libp->para[0].ref;
   const StUPCRpsCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCRpsTrack */
static int G__G__starmIupc_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCRpsTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsTrack[n];
     } else {
       p = new((void*) gvp) StUPCRpsTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsTrack;
     } else {
       p = new((void*) gvp) StUPCRpsTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StUPCRpsTrack*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->theta((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->theta());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->thetaRp((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->thetaRp());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->phiRp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StUPCRpsTrack*) G__getstructoffset())->getFirstTrackPointId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StUPCRpsTrack*) G__getstructoffset())->getSecondTrackPointId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StUPCRpsTrack*) G__getstructoffset())->pVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCRpsTrack*) G__getstructoffset())->branch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCRpsTrack*) G__getstructoffset())->type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->t((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->xi((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->p());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StUPCRpsTrack*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCRpsTrack*) G__getstructoffset())->getEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StUPCRpsTrack*) G__getstructoffset())->getTrackPoint((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setFirstTrackPointId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setSecondTrackPointId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setP(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setBranch((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setType((StUPCRpsTrack::StRpsTrackType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->setEvent((StRPEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCRpsTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCRpsTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCRpsTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_238_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCRpsTrack G__TStUPCRpsTrack;
static int G__G__starmIupc_238_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCRpsTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCRpsTrack*) (soff+(sizeof(StUPCRpsTrack)*i)))->~G__TStUPCRpsTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCRpsTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCRpsTrack*) (soff))->~G__TStUPCRpsTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCRpsTrackPoint */
static int G__G__starmIupc_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCRpsTrackPoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsTrackPoint[n];
     } else {
       p = new((void*) gvp) StUPCRpsTrackPoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCRpsTrackPoint;
     } else {
       p = new((void*) gvp) StUPCRpsTrackPoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCRpsTrackPoint*) G__getstructoffset())->planesUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StUPCRpsTrackPoint*) G__getstructoffset())->positionVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StUPCRpsTrackPoint*) G__getstructoffset())->rpId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCRpsTrackPoint*) G__getstructoffset())->clusterId((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsTrackPoint*) G__getstructoffset())->time((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StUPCRpsTrackPoint*) G__getstructoffset())->quality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsTrackPoint*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsTrackPoint*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCRpsTrackPoint*) G__getstructoffset())->z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->setPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->setRpId((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->setClusterId((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->setTime((Float_t) G__double(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->setQuality((StUPCRpsTrackPoint::StUPCRpsTrackPointQuality) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCRpsTrackPoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrackPoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCRpsTrackPoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCRpsTrackPoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCRpsTrackPoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrackPoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsTrackPoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCRpsTrackPoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_239_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCRpsTrackPoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCRpsTrackPoint G__TStUPCRpsTrackPoint;
static int G__G__starmIupc_239_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCRpsTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCRpsTrackPoint*) (soff+(sizeof(StUPCRpsTrackPoint)*i)))->~G__TStUPCRpsTrackPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCRpsTrackPoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCRpsTrackPoint*) (soff))->~G__TStUPCRpsTrackPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StRPEvent */
static int G__G__starmIupc_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRPEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRPEvent[n];
     } else {
       p = new((void*) gvp) StRPEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRPEvent;
     } else {
       p = new((void*) gvp) StRPEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRPEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StRPEvent(*(StRPEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StRPEvent(*(StRPEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->clearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRPEvent*) G__getstructoffset())->addCluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRPEvent*) G__getstructoffset())->addTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((StRPEvent*) G__getstructoffset())->addTrackPoint());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRPEvent*) G__getstructoffset())->getNumberOfClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getCluster((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRPEvent*) G__getstructoffset())->getNumberOfTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const StRPEvent*) G__getstructoffset())->getNumberOfTrackPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getTrackPoint((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->getTrackPoints());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setSiliconBunch((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setStatus((UInt_t) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setNumberPlanes((UInt_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setNumberPlanesWithCluster((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setAdc((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setTac((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setOffset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setZ((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setAngle((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setOrientation((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->setStatus((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UChar_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRPEvent*) G__getstructoffset())->siliconBunch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StRPEvent*) G__getstructoffset())->numberOfPlanes((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StRPEvent*) G__getstructoffset())->numberOfPlanesWithClusters((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRPEvent*) G__getstructoffset())->status((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StRPEvent*) G__getstructoffset())->adc((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StRPEvent*) G__getstructoffset())->tac((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StRPEvent*) G__getstructoffset())->offset((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StRPEvent*) G__getstructoffset())->z((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StRPEvent*) G__getstructoffset())->angle((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StRPEvent*) G__getstructoffset())->orientation((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const StRPEvent*) G__getstructoffset())->status((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRPEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRPEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRPEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRPEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRPEvent*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRPEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRPEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRPEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRPEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_240_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRPEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRPEvent G__TStRPEvent;
static int G__G__starmIupc_240_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRPEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRPEvent*) (soff+(sizeof(StRPEvent)*i)))->~G__TStRPEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRPEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRPEvent*) (soff))->~G__TStRPEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StPicoHelix */
static int G__G__starmIupc_256_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoHelix[n];
     } else {
       p = new((void*) gvp) StPicoHelix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoHelix;
     } else {
       p = new((void*) gvp) StPicoHelix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StPicoHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
     } else {
       p = new((void*) gvp) StPicoHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StPicoHelix(*(StPicoHelix*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) StPicoHelix(*(StPicoHelix*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->dipAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->curvature());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->phase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->xcenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->ycenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPicoHelix*) G__getstructoffset())->h());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const StPicoHelix*) G__getstructoffset())->origin();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoHelix*) G__getstructoffset())->setParameters((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->x((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->y((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->z((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StPicoHelix*) G__getstructoffset())->at((Double_t) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->cx((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->cy((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->cz((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->cz());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StPicoHelix*) G__getstructoffset())->cat((Double_t) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->period());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<Double_t,Double_t>* pobj;
         const pair<Double_t,Double_t> xobj = ((const StPicoHelix*) G__getstructoffset())->pathLength((Double_t) G__double(libp->para[0]));
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<Double_t,Double_t>* pobj;
         pair<Double_t,Double_t> xobj = ((StPicoHelix*) G__getstructoffset())->pathLength((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->pathLength(*(TVector3*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->pathLength(*(TVector3*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->pathLength(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->pathLength((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const pair<Double_t,Double_t>* pobj;
         const pair<Double_t,Double_t> xobj = ((const StPicoHelix*) G__getstructoffset())->pathLengths(*(StPicoHelix*) libp->para[0].ref, (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const pair<Double_t,Double_t>* pobj;
         const pair<Double_t,Double_t> xobj = ((const StPicoHelix*) G__getstructoffset())->pathLengths(*(StPicoHelix*) libp->para[0].ref, (Double_t) G__double(libp->para[1]));
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const pair<Double_t,Double_t>* pobj;
         const pair<Double_t,Double_t> xobj = ((const StPicoHelix*) G__getstructoffset())->pathLengths(*(StPicoHelix*) libp->para[0].ref);
         pobj = new pair<Double_t,Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->distance(*(TVector3*) libp->para[0].ref, (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const StPicoHelix*) G__getstructoffset())->distance(*(TVector3*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((const StPicoHelix*) G__getstructoffset())->valid((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((const StPicoHelix*) G__getstructoffset())->valid());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StPicoHelix*) G__getstructoffset())->bad((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StPicoHelix*) G__getstructoffset())->bad());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoHelix*) G__getstructoffset())->moveOrigin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StPicoHelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoHelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StPicoHelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StPicoHelix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StPicoHelix*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoHelix*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoHelix*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoHelix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoHelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPicoHelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoHelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_256_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPicoHelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StPicoHelix G__TStPicoHelix;
static int G__G__starmIupc_256_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StPicoHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StPicoHelix*) (soff+(sizeof(StPicoHelix)*i)))->~G__TStPicoHelix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StPicoHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StPicoHelix*) (soff))->~G__TStPicoHelix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIupc_256_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoHelix* dest = (StPicoHelix*) G__getstructoffset();
   *dest = *(StPicoHelix*) libp->para[0].ref;
   const StPicoHelix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StPicoPhysicalHelix */
static int G__G__starmIupc_258_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoPhysicalHelix[n];
     } else {
       p = new((void*) gvp) StPicoPhysicalHelix[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoPhysicalHelix;
     } else {
       p = new((void*) gvp) StPicoPhysicalHelix;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StPicoPhysicalHelix(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) StPicoPhysicalHelix(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoPhysicalHelix* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoPhysicalHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StPicoPhysicalHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StPicoPhysicalHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
     } else {
       p = new((void*) gvp) StPicoPhysicalHelix(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TVector3*) libp->para[3].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StPicoPhysicalHelix*) G__getstructoffset())->momentum((Double_t) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const StPicoPhysicalHelix*) G__getstructoffset())->momentumAt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StPicoPhysicalHelix*) G__getstructoffset())->charge((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPicoPhysicalHelix*) G__getstructoffset())->curvatureSignedDistance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPicoPhysicalHelix*) G__getstructoffset())->geometricSignedDistance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPicoPhysicalHelix*) G__getstructoffset())->curvatureSignedDistance(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StPicoPhysicalHelix*) G__getstructoffset())->geometricSignedDistance(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StPicoPhysicalHelix::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoPhysicalHelix::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StPicoPhysicalHelix::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StPicoPhysicalHelix::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StPicoPhysicalHelix*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoPhysicalHelix::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPicoPhysicalHelix::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StPicoPhysicalHelix::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_258_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StPicoPhysicalHelix::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__starmIupc_258_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StPicoPhysicalHelix* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StPicoPhysicalHelix(*(StPicoPhysicalHelix*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StPicoPhysicalHelix G__TStPicoPhysicalHelix;
static int G__G__starmIupc_258_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StPicoPhysicalHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StPicoPhysicalHelix*) (soff+(sizeof(StPicoPhysicalHelix)*i)))->~G__TStPicoPhysicalHelix();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StPicoPhysicalHelix*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StPicoPhysicalHelix*) (soff))->~G__TStPicoPhysicalHelix();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__starmIupc_258_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StPicoPhysicalHelix* dest = (StPicoPhysicalHelix*) G__getstructoffset();
   *dest = *(StPicoPhysicalHelix*) libp->para[0].ref;
   const StPicoPhysicalHelix& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StUPCV0 */
static int G__G__starmIupc_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCV0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCV0[n];
     } else {
       p = new((void*) gvp) StUPCV0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCV0;
     } else {
       p = new((void*) gvp) StUPCV0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCV0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StUPCV0((StUPCV0*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StUPCV0((StUPCV0*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StUPCV0* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCV0(
(StUPCTrack*) G__int(libp->para[0]), (StUPCTrack*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (unsigned short) G__int(libp->para[5])
, *(TVector3*) libp->para[6].ref, (double*) G__int(libp->para[7])
, (float) G__double(libp->para[8]), (bool) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) StUPCV0(
(StUPCTrack*) G__int(libp->para[0]), (StUPCTrack*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (unsigned short) G__int(libp->para[5])
, *(TVector3*) libp->para[6].ref, (double*) G__int(libp->para[7])
, (float) G__double(libp->para[8]), (bool) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StUPCV0(
(StUPCTrack*) G__int(libp->para[0]), (StUPCTrack*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (unsigned short) G__int(libp->para[5])
, *(TVector3*) libp->para[6].ref, (double*) G__int(libp->para[7])
, (float) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) StUPCV0(
(StUPCTrack*) G__int(libp->para[0]), (StUPCTrack*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (unsigned short) G__int(libp->para[4]), (unsigned short) G__int(libp->para[5])
, *(TVector3*) libp->para[6].ref, (double*) G__int(libp->para[7])
, (float) G__double(libp->para[8]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TLorentzVector& obj = ((const StUPCV0*) G__getstructoffset())->lorentzVector();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const StUPCV0*) G__getstructoffset())->decayVertex();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const StUPCV0*) G__getstructoffset())->prodVertexHypo();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const StUPCV0*) G__getstructoffset())->prodPlane();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->pointingAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->pointingAngleHypo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->pointingAngle(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->decayLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->decayLengthHypo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->decayLength(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->DCABeamLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->particle1Dca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->particle1Dca(*((StPicoPhysicalHelix*) G__int(libp->para[0])), *(TVector3*) libp->para[1].ref
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->particle2Dca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->particle2Dca(*((StPicoPhysicalHelix*) G__int(libp->para[0])), *(TVector3*) libp->para[1].ref
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCV0*) G__getstructoffset())->particle1Idx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StUPCV0*) G__getstructoffset())->particle2Idx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->dcaDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->cosThetaStar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->thetaProdPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->v0x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->v0y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->v0z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->DcaToPrimaryVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->alphaAP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StUPCV0*) G__getstructoffset())->ptAP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StUPCV0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCV0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StUPCV0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StUPCV0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StUPCV0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCV0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCV0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StUPCV0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__starmIupc_263_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StUPCV0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StUPCV0 G__TStUPCV0;
static int G__G__starmIupc_263_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StUPCV0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StUPCV0*) (soff+(sizeof(StUPCV0)*i)))->~G__TStUPCV0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StUPCV0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StUPCV0*) (soff))->~G__TStUPCV0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StUPCTrack */

/* StUPCBemcCluster */

/* StUPCTofHit */

/* StUPCVertex */

/* StUPCEvent */

/* StUPCRpsCluster */

/* StUPCRpsTrack */

/* StUPCRpsTrackPoint */

/* StRPEvent */

/* StPicoHelix */

/* StPicoPhysicalHelix */

/* StUPCV0 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__starmIupc {
 public:
  G__Sizep2memfuncG__starmIupc(): p(&G__Sizep2memfuncG__starmIupc::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__starmIupc::*p)();
};

size_t G__get_sizep2memfuncG__starmIupc()
{
  G__Sizep2memfuncG__starmIupc a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__starmIupc() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack))) {
     StUPCTrack *G__Lderived;
     G__Lderived=(StUPCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster))) {
     StUPCBemcCluster *G__Lderived;
     G__Lderived=(StUPCBemcCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit))) {
     StUPCTofHit *G__Lderived;
     G__Lderived=(StUPCTofHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex))) {
     StUPCVertex *G__Lderived;
     G__Lderived=(StUPCVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster))) {
     StUPCRpsCluster *G__Lderived;
     G__Lderived=(StUPCRpsCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack))) {
     StUPCRpsTrack *G__Lderived;
     G__Lderived=(StUPCRpsTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint))) {
     StUPCRpsTrackPoint *G__Lderived;
     G__Lderived=(StUPCRpsTrackPoint*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix))) {
     StPicoPhysicalHelix *G__Lderived;
     G__Lderived=(StPicoPhysicalHelix*)0x1000;
     {
       StPicoHelix *G__Lpbase=(StPicoHelix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix),G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0))) {
     StUPCV0 *G__Lderived;
     G__Lderived=(StUPCV0*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0),G__get_linked_tagnum(&G__G__starmIupcLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__starmIupc() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__starmIupcLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__G__starmIupcLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StUPCTrack */
static void G__setup_memvarStUPCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack));
   { StUPCTrack *p; p=(StUPCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kBemc=%lldLL",(long long)StUPCTrack::kBemc).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kTof=%lldLL",(long long)StUPCTrack::kTof).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kBemcProj=%lldLL",(long long)StUPCTrack::kBemcProj).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kPrimary=%lldLL",(long long)StUPCTrack::kPrimary).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kV0=%lldLL",(long long)StUPCTrack::kV0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLFlag),-1,-2,1,G__FastAllocString(4096).Format("kCEP=%lldLL",(long long)StUPCTrack::kCEP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLPart),-1,-2,1,G__FastAllocString(4096).Format("kElectron=%lldLL",(long long)StUPCTrack::kElectron).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLPart),-1,-2,1,G__FastAllocString(4096).Format("kPion=%lldLL",(long long)StUPCTrack::kPion).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLPart),-1,-2,1,G__FastAllocString(4096).Format("kKaon=%lldLL",(long long)StUPCTrack::kKaon).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrackcLcLPart),-1,-2,1,G__FastAllocString(4096).Format("kProton=%lldLL",(long long)StUPCTrack::kProton).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mFlags=",0,"track flags");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mPt=",0,"pT at point of dca to primary vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mEta=",0,"pseudorapidity at point of dca to primary vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mPhi=",0,"phi at point of dca to primary vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mCurvature=",0,"curvature of track from StHelix");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mDipAngle=",0,"dip angle of track from StHelix");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mPhase=",0,"phase of track from StHelix");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mOrigin=",0,"origin of track from StHelix");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mDcaXY=",0,"perpendicular dca to primary vertex of associated global track");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mDcaZ=",0,"longitudinal dca to primary vertex of associated global track");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"mCharge=",0,"track electrical charge");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNhits=",0,"total number of hits on track");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNhitsFit=",0,"number of hits used in fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mChi2=",0,"chi2 of fit");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNhitsDEdx=",0,"number of hits used for dE/dx measurement");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mDEdxSignal=",0,"measured dE/dx value");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNpart=4LL",0,"number of particle species with dE/dx identification");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float16_t"),-1,4,"mNSigmasTPC[4]=",0,"dE/dx n sigmas for particle species");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBemcPt=",0,"pT at BEMC radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBemcEta=",0,"pseudorapidity at BEMC radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBemcPhi=",0,"phi at BEMC radius");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBemcClsId=",0,"id of BEMC cluster which track is matched to");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mBemcHitE=",0,"energy of matched BEMC cluster");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofTime=",0,"time of flight by TOF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTofPathLength=",0,"path lenght from TOF");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mVtxId=",0,"ID of primary vertex associated with track");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent),-1,-1,4,"mEvt=",0,"! pointer to current event, local use only");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mIdTruth=",0,"MC track id.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mQATruth=",0,"MC track quality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCBemcCluster */
static void G__setup_memvarStUPCBemcCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster));
   { StUPCBemcCluster *p; p=(StUPCBemcCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mEta=",0,"eta of cluster");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPhi=",0,"phi of cluster");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mSigmaEta=",0,"sigma of eta");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mSigmaPhi=",0,"sigma of phi");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mEnergy=",0,"energy of cluster;");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mId=",0,"original ID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mHTEnergy=",0,"energy of highest energy cell in cluster (high tower)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mHTsoftID=",0,"softID of highest energy cell");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCTofHit */
static void G__setup_memvarStUPCTofHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit));
   { StUPCTofHit *p; p=(StUPCTofHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mTray=",0,"Tray of TOF hit");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mModule=",0,"Module of TOF hit");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mCell=",0,"Cell of TOF hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mLeadingEdgeTime=",0,"Leading Edge Time of TOF hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mTrailingEdgeTime=",0,"Trailing Edge Time of TOF hit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCVertex */
static void G__setup_memvarStUPCVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex));
   { StUPCVertex *p; p=(StUPCVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPosX=",0,"position x");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPosY=",0,"position y");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPosZ=",0,"position z");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mErrX=",0,"error in position x");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mErrY=",0,"error in position y");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mErrZ=",0,"error in position z");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNPrimaryTracks=",0,"number of all primary tracks associated with the vertex");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNTracksUsed=",0,"number of tracks used for the vertex");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mId=",0,"original vertex ID");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCEvent */
static void G__setup_memvarStUPCEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent));
   { StUPCEvent *p; p=(StUPCEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TArrayI),-1,-1,4,"mTrgIDs=",0,"fired trigger IDs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mRunNum=",0,"number of current run");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mEvtNum=",0,"event number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mFillNum=",0,"beam fill number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mbCrossId=",0,"bunch crossing ID");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mbCrossId7bit=",0,"bunch crossing ID 7bit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mMagField=",0,"magnetic field");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBeamXPosition=",0,"table[i].x0 ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBeamXSlope=",0,"table[i].dxdz ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBeamYPosition=",0,"table[i].y0 ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mBeamYSlope=",0,"table[i].dydz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mZdcEastRate=",0,"ZDC rate, east");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mZdcWestRate=",0,"ZDC rate, west");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"mZdcCoincRate=",0,"ZDC rate, east&&west coincidence");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mLastDSM0=",0,"TCU bits 0-15 from StTriggerData::lastDSM(0)");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mLastDSM1=",0,"TCU bits 16-31");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mLastDSM3=",0,"TCU bits 58-62");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcEastUA=",0,"ZDC unattenuated signal, east");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcWestUA=",0,"ZDC unattenuated signal, west");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNZdcPmt=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcEastADC[3]=",0,"ZDC 3 PMT ADCs, east");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcWestADC[3]=",0,"ZDC 3 PMT ADCs, west");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcEastTDC=",0,"ZDC TDC, east");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcWestTDC=",0,"ZDC TDC, west");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcTimeDiff=",0,"ZDC time difference, east-west");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mZdcVertexZ=",0,"ZDC vertex z position, mm");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNZdcSmd=16LL",0,"number of ZDC SMD channels, east and west");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcSmdEast[16]=",0,"ZDC SMD data east");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZdcSmdWest[16]=",0,"ZDC SMD data west");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBBCSmallEast=",0,"BBC truncated sum, small tiles, east");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBBCSmallWest=",0,"BBC truncated sum, small tiles, west");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBBCLargeEast=",0,"BBC truncated sum, large tiles, east");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBBCLargeWest=",0,"BBC truncated sum, large tiles, west");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mVPDSumEast=",0,"VPD ADC sum east");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mVPDSumWest=",0,"VPD ADC sum west");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mVPDTimeDiff=",0,"VPD time difference");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mTofMult=",0,"TOF multiplicity from StTriggerData");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mBemcMult=",0,"BEMC multiplicity, number of all BEMC clusters in event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNGlobTracks=",0,"number of global tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNPrimTracks=",0,"number of primary tracks");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mNPrimVertices=",0,"number of primary vertices");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgUPCTracks=",0,"array of upc tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mUPCTracks=",0,"-> array of upc tracks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNtracks=",0,"! number of upc tracks in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgUPCBemcClusters=",0,"array of BEMC clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mUPCBemcClusters=",0,"-> array of BEMC clusters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNclusters=",0,"! number of BEMC clusters written in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgUPCTOFHits=",0,"array of upc TOF hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mUPCTOFHits=",0,"-> array of upc TOF hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNhits=",0,"! number of TOF hits written in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgUPCVertices=",0,"array of UPC vertices");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mUPCVertices=",0,"-> array of UPC vertices");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNvertices=",0,"! number of vertices written in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgMCParticles=",0,"array of MC particles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mMCParticles=",0,"array of MC particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNmc=",0,"! number of mc particles in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCRpsCluster */
static void G__setup_memvarStUPCRpsCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster));
   { StUPCRpsCluster *p; p=(StUPCRpsCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mPositionRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"mLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mPlaneId=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mRomanPotId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCRpsTrack */
static void G__setup_memvarStUPCRpsTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack));
   { StUPCRpsTrack *p; p=(StUPCRpsTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(4096).Format("rpsLocal=%lldLL",(long long)StUPCRpsTrack::rpsLocal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(4096).Format("rpsGlobal=%lldLL",(long long)StUPCRpsTrack::rpsGlobal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType),-1,-2,1,G__FastAllocString(4096).Format("rpsUndefined=%lldLL",(long long)StUPCRpsTrack::rpsUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(4096).Format("rpsAngleThetaX=%lldLL",(long long)StUPCRpsTrack::rpsAngleThetaX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(4096).Format("rpsAngleThetaY=%lldLL",(long long)StUPCRpsTrack::rpsAngleThetaY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(4096).Format("rpsAngleTheta=%lldLL",(long long)StUPCRpsTrack::rpsAngleTheta).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles),-1,-2,1,G__FastAllocString(4096).Format("mNumberOfAngleTypes=%lldLL",(long long)StUPCRpsTrack::mNumberOfAngleTypes).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(4096).Format("mNumberOfStationsInBranch=%lldLL",(long long)StUPCRpsTrack::mNumberOfStationsInBranch).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mFirstTrackPointId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mSecondTrackPointId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mP=",0,"three-vector with reconstructed track momentum");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType),-1,-1,4,"mType=",0,"type of the track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mBranch=",0,"detectors branch, EU=0, ED=1, WU=2, WD=3 ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent),-1,-1,4,"mEvt=",0,"! pointer to current event, local use only");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCRpsTrackPoint */
static void G__setup_memvarStUPCRpsTrackPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint));
   { StUPCRpsTrackPoint *p; p=(StUPCRpsTrackPoint*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality),-1,-2,1,G__FastAllocString(4096).Format("rpsNormal=%lldLL",(long long)StUPCRpsTrackPoint::rpsNormal).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality),-1,-2,1,G__FastAllocString(4096).Format("rpsGolden=%lldLL",(long long)StUPCRpsTrackPoint::rpsGolden).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality),-1,-2,1,G__FastAllocString(4096).Format("rpsNotSet=%lldLL",(long long)StUPCRpsTrackPoint::rpsNotSet).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(4096).Format("mNumberOfPmtsInRp=%lldLL",(long long)StUPCRpsTrackPoint::mNumberOfPmtsInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(4096).Format("mNumberOfPlanesInRp=%lldLL",(long long)StUPCRpsTrackPoint::mNumberOfPlanesInRp).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mTime[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mRpId=",0,"Id of Roman Pot, E1U = 0, E1D = 1, E2U = 2, E2D, W1U, W1D, W2U, W2D = 7");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mClusterId[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality),-1,-1,4,"mQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StRPEvent */
static void G__setup_memvarStRPEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent));
   { StRPEvent *p; p=(StRPEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNumberOfRomanPots=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNumberOfPlanesInRP=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNumberOfPmtsInRp=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mOffsetPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mzPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mAnglePlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"mOrientationPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNumberPlanesWithCluster[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mADC[8][2]=",0,"ADC in 2 pmt");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mTAC[8][2]=",0,"TAC in 2 pmt");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNumberPlanes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mStatusPlane[8][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mSiliconBunch=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mStatusRomanPot[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgClusters=",0,"array of upc tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mClusters=",0,"-> array of upc tracks");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mNClusters=",0,"! number of upc tracks in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgTracks=",0,"array of upc tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mTracks=",0,"-> array of upc tracks");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mNTracks=",0,"! number of upc tracks in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-2,4,"mgTrackPoints=",0,"array of upc tracks");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray),-1,-1,4,"mTrackPoints=",0,"-> array of upc tracks");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mNTrackPoints=",0,"! number of upc tracks in event, local use when filling");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StPicoHelix */
static void G__setup_memvarStPicoHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix));
   { StPicoHelix *p; p=(StPicoHelix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&StPicoHelix::NoSolution),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"NoSolution=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mSingularity=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,2,"mOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mCurvature=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mH=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mCosDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mSinDipAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mCosPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mSinPhase=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StPicoPhysicalHelix */
static void G__setup_memvarStPicoPhysicalHelix(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   { StPicoPhysicalHelix *p; p=(StPicoPhysicalHelix*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StUPCV0 */
static void G__setup_memvarStUPCV0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0));
   { StUPCV0 *p; p=(StUPCV0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TLorentzVector),-1,-1,4,"mLorentzVector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mDecayVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mProdPlane=",0,"production plane vector: unity vector perpendicular to production plane");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mDCABeamLine=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TVector3),-1,-1,4,"mProdVertexHypo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPointingAngleHypo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mDecayLengthHypo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPointingAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mDecayLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mParticle1Dca=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mParticle2Dca=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mDcaToPrimaryVertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,4,"mParticle1Idx=",0,"index of track in StUPCDstEvent ");
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,4,"mParticle2Idx=",0,"index of track in StUPCDstEvent for particle, idx in tertiary vertex array for pair ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mDcaDaughters=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mCosThetaStar=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mThetaProdPlane=",0,"anlgle between momentum of particle1 and mProdPlane vector in mother rest frame");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mAlphaAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPtAP=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__starmIupcLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__starmIupc() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStUPCTrack(void) {
   /* StUPCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack));
   G__memfunc_setup("StUPCTrack",932,G__G__starmIupc_172_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setFlag",710,G__G__starmIupc_172_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StUPCTrack::Flag' - 0 - flg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPtEtaPhi",1099,G__G__starmIupc_172_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - eta "
"d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCurvatureDipAnglePhase",2562,G__G__starmIupc_172_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - curvature d - 'Double_t' 0 - dipAngle "
"d - 'Double_t' 0 - phase", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOrigin",948,G__G__starmIupc_172_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - origin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDcaXY",773,G__G__starmIupc_172_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDcaZ",686,G__G__starmIupc_172_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - dca", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCharge",918,G__G__starmIupc_172_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNhits",850,G__G__starmIupc_172_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - nh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNhitsFit",1141,G__G__starmIupc_172_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - nf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__G__starmIupc_172_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNhitsDEdx",1207,G__G__starmIupc_172_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - nh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDEdxSignal",1295,G__G__starmIupc_172_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - de", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSigmasTPC",1253,G__G__starmIupc_172_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'StUPCTrack::Part' - 0 - pt f - 'Float_t' 0 - nsig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBemcPtEtaPhi",1474,G__G__starmIupc_172_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - eta "
"d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBemcClusterId",1618,G__G__starmIupc_172_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBemcHitE",1069,G__G__starmIupc_172_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - he", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTofTime",1028,G__G__starmIupc_172_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTofPathLength",1636,G__G__starmIupc_172_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVertexId",1143,G__G__starmIupc_172_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvent",846,G__G__starmIupc_172_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StUPCEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIdTruth",1040,G__G__starmIupc_172_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQaTruth",1045,G__G__starmIupc_172_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - qa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlag",698,G__G__starmIupc_172_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i 'StUPCTrack::Flag' - 0 - flg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPtEtaPhi",1087,G__G__starmIupc_172_0_26, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - pt d - 'Double_t' 1 - eta "
"d - 'Double_t' 1 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPt",516,G__G__starmIupc_172_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__G__starmIupc_172_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__G__starmIupc_172_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLorentzVector",1697,G__G__starmIupc_172_0_30, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TLorentzVector' - 1 - lvec d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__G__starmIupc_172_0_31, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TVector3' - 1 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurvature",1281,G__G__starmIupc_172_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDipAngle",1092,G__G__starmIupc_172_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhase",817,G__G__starmIupc_172_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOrigin",936,G__G__starmIupc_172_0_35, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDcaXY",761,G__G__starmIupc_172_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDcaZ",674,G__G__starmIupc_172_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCharge",906,G__G__starmIupc_172_0_38, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNhits",838,G__G__starmIupc_172_0_39, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNhitsFit",1129,G__G__starmIupc_172_0_40, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__G__starmIupc_172_0_41, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNhitsDEdx",1195,G__G__starmIupc_172_0_42, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDEdxSignal",1283,G__G__starmIupc_172_0_43, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSigmasTPC",1241,G__G__starmIupc_172_0_44, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i 'StUPCTrack::Part' - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSigmasTPCElectron",2069,G__G__starmIupc_172_0_45, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSigmasTPCPion",1647,G__G__starmIupc_172_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSigmasTPCKaon",1634,G__G__starmIupc_172_0_47, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSigmasTPCProton",1883,G__G__starmIupc_172_0_48, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcPtEtaPhi",1462,G__G__starmIupc_172_0_49, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - pt d - 'Double_t' 1 - eta "
"d - 'Double_t' 1 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcPt",891,G__G__starmIupc_172_0_50, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcEta",977,G__G__starmIupc_172_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcPhi",984,G__G__starmIupc_172_0_52, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcPmag",1084,G__G__starmIupc_172_0_53, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcClusterId",1606,G__G__starmIupc_172_0_54, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcHitE",1057,G__G__starmIupc_172_0_55, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcCluster",1433,G__G__starmIupc_172_0_56, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBemcLorentzVector",2072,G__G__starmIupc_172_0_57, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'TLorentzVector' - 1 - blvec d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofTime",1016,G__G__starmIupc_172_0_58, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofPathLength",1624,G__G__starmIupc_172_0_59, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexId",1131,G__G__starmIupc_172_0_60, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__G__starmIupc_172_0_61, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEvent",834,G__G__starmIupc_172_0_62, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIdTruth",1028,G__G__starmIupc_172_0_63, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQaTruth",1033,G__G__starmIupc_172_0_64, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCTrack",932,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack), -1, 0, 1, 1, 4, 0, "u 'StUPCTrack' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack), -1, 1, 1, 1, 4, 0, "u 'StUPCTrack' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_172_0_67, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_172_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_172_0_69, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_172_0_70, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_172_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_172_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_172_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_172_0_77, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_172_0_78, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCTrack", 1058, G__G__starmIupc_172_0_79, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCBemcCluster(void) {
   /* StUPCBemcCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster));
   G__memfunc_setup("StUPCBemcCluster",1544,G__G__starmIupc_173_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEta",614,G__G__starmIupc_173_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - eta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhi",621,G__G__starmIupc_173_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaEta",1111,G__G__starmIupc_173_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - se", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigmaPhi",1118,G__G__starmIupc_173_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__G__starmIupc_173_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__G__starmIupc_173_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHTEnergy",1106,G__G__starmIupc_173_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHTsoftID",1073,G__G__starmIupc_173_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__G__starmIupc_173_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__G__starmIupc_173_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaEta",1099,G__G__starmIupc_173_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaPhi",1106,G__G__starmIupc_173_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__G__starmIupc_173_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__G__starmIupc_173_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHTEnergy",1094,G__G__starmIupc_173_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHTsoftID",1061,G__G__starmIupc_173_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCBemcCluster",1544,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 1, 1, 4, 0, "u 'StUPCBemcCluster' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 1, 1, 1, 4, 0, "u 'StUPCBemcCluster' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_173_0_20, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCBemcCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_173_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCBemcCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_173_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCBemcCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_173_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCBemcCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_173_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_173_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCBemcCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_173_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCBemcCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_173_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCBemcCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_173_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCBemcCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCBemcCluster", 1670, G__G__starmIupc_173_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCTofHit(void) {
   /* StUPCTofHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit));
   G__memfunc_setup("StUPCTofHit",1021,G__G__starmIupc_174_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTray",748,G__G__starmIupc_174_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - tray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModule",946,G__G__starmIupc_174_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCell",716,G__G__starmIupc_174_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLeadingEdgeTime",1796,G__G__starmIupc_174_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - leTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrailingEdgeTime",1930,G__G__starmIupc_174_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - teTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTray",736,G__G__starmIupc_174_0_7, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__G__starmIupc_174_0_8, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__G__starmIupc_174_0_9, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLeadingEdgeTime",1784,G__G__starmIupc_174_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrailingEdgeTime",1918,G__G__starmIupc_174_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCTofHit",1021,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit), -1, 0, 1, 1, 4, 0, "u 'StUPCTofHit' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit), -1, 1, 1, 1, 4, 0, "u 'StUPCTofHit' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_174_0_14, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCTofHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_174_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTofHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_174_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCTofHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_174_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCTofHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_174_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_174_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTofHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_174_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCTofHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_174_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCTofHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_174_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCTofHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCTofHit", 1147, G__G__starmIupc_174_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCVertex(void) {
   /* StUPCVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex));
   G__memfunc_setup("StUPCVertex",1069,G__G__starmIupc_176_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosX",726,G__G__starmIupc_176_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosY",727,G__G__starmIupc_176_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosZ",728,G__G__starmIupc_176_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrX",717,G__G__starmIupc_176_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrY",718,G__G__starmIupc_176_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrZ",719,G__G__starmIupc_176_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPrimaryTracks",1766,G__G__starmIupc_176_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ntrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTracksUsed",1427,G__G__starmIupc_176_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - ntrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__G__starmIupc_176_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosX",714,G__G__starmIupc_176_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosY",715,G__G__starmIupc_176_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPosZ",716,G__G__starmIupc_176_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrX",705,G__G__starmIupc_176_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrY",706,G__G__starmIupc_176_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrZ",707,G__G__starmIupc_176_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPrimaryTracks",1754,G__G__starmIupc_176_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNTracksUsed",1415,G__G__starmIupc_176_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__G__starmIupc_176_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCVertex",1069,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 1, 1, 4, 0, "u 'StUPCVertex' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 1, 1, 1, 4, 0, "u 'StUPCVertex' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_176_0_22, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_176_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_176_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_176_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_176_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_176_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_176_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_176_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_176_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCVertex", 1195, G__G__starmIupc_176_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCEvent(void) {
   /* StUPCEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent));
   G__memfunc_setup("StUPCEvent",945,G__G__starmIupc_180_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__G__starmIupc_180_0_2, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent), -1, 1, 1, 1, 1, 0, "u 'StUPCEvent' - 11 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearEvent",1033,G__G__starmIupc_180_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTriggerId",1194,G__G__starmIupc_180_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunNumber",1258,G__G__starmIupc_180_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventNumber",1463,G__G__starmIupc_180_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFillNumber",1340,G__G__starmIupc_180_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBunchCrossId",1523,G__G__starmIupc_180_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBunchCrossId7bit",1897,G__G__starmIupc_180_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMagneticField",1624,G__G__starmIupc_180_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamXPosition",1646,G__G__starmIupc_180_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - beamParam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamXSlope",1308,G__G__starmIupc_180_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - beamParam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamYPosition",1647,G__G__starmIupc_180_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - beamParam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamYSlope",1309,G__G__starmIupc_180_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - beamParam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCEastRate",1350,G__G__starmIupc_180_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCWestRate",1372,G__G__starmIupc_180_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCCoincRate",1445,G__G__starmIupc_180_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLastDSM0",1012,G__G__starmIupc_180_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - dsm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLastDSM1",1013,G__G__starmIupc_180_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - dsm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLastDSM3",1015,G__G__starmIupc_180_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - dsm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCUnAttEast",1446,G__G__starmIupc_180_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCUnAttWest",1468,G__G__starmIupc_180_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCEastADC",1154,G__G__starmIupc_180_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - signal i - 'Int_t' 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCWestADC",1176,G__G__starmIupc_180_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'UShort_t' 0 - signal i - 'Int_t' 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCEastTDC",1173,G__G__starmIupc_180_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCWestTDC",1195,G__G__starmIupc_180_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZDCTimeDiff",1333,G__G__starmIupc_180_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - deltaT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZdcVertexZ",1349,G__G__starmIupc_180_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZdcSMDEast",1246,G__G__starmIupc_180_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - verthori i - 'Int_t' 0 - strip "
"r - 'UShort_t' 0 - smd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZdcSMDWest",1268,G__G__starmIupc_180_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - verthori i - 'Int_t' 0 - strip "
"r - 'UShort_t' 0 - smd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBBCSmallEast",1433,G__G__starmIupc_180_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBBCSmallWest",1455,G__G__starmIupc_180_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBBCLargeEast",1419,G__G__starmIupc_180_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBBCLargeWest",1441,G__G__starmIupc_180_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVPDSumEast",1272,G__G__starmIupc_180_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVPDSumWest",1294,G__G__starmIupc_180_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVPDTimeDiff",1342,G__G__starmIupc_180_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - deltaT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTOFMultiplicity",1854,G__G__starmIupc_180_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBEMCMultiplicity",1900,G__G__starmIupc_180_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - be", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNGlobTracks",1414,G__G__starmIupc_180_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ntrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPrimTracks",1434,G__G__starmIupc_180_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ntrk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNPrimVertices",1655,G__G__starmIupc_180_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - nvtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__G__starmIupc_180_0_43, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCluster",1035,G__G__starmIupc_180_0_44, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHit",590,G__G__starmIupc_180_0_45, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addVertex",935,G__G__starmIupc_180_0_46, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsMC",664,G__G__starmIupc_180_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' mc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMCParticle",1261,G__G__starmIupc_180_0_48, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerArraySize",1966,G__G__starmIupc_180_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerID",1185,G__G__starmIupc_180_0_50, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTrigger",944,G__G__starmIupc_180_0_51, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunNumber",1246,G__G__starmIupc_180_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventNumber",1451,G__G__starmIupc_180_0_53, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFillNumber",1328,G__G__starmIupc_180_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBunchCrossId",1511,G__G__starmIupc_180_0_55, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBunchCrossId7bit",1885,G__G__starmIupc_180_0_56, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMagneticField",1612,G__G__starmIupc_180_0_57, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamXPosition",1634,G__G__starmIupc_180_0_58, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamXSlope",1296,G__G__starmIupc_180_0_59, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamYPosition",1635,G__G__starmIupc_180_0_60, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamYSlope",1297,G__G__starmIupc_180_0_61, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCEastRate",1338,G__G__starmIupc_180_0_62, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCWestRate",1360,G__G__starmIupc_180_0_63, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCCoincRate",1433,G__G__starmIupc_180_0_64, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastDSM0",1000,G__G__starmIupc_180_0_65, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastDSM1",1001,G__G__starmIupc_180_0_66, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastDSM3",1003,G__G__starmIupc_180_0_67, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCUnAttEast",1434,G__G__starmIupc_180_0_68, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCUnAttWest",1456,G__G__starmIupc_180_0_69, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCEastADC",1142,G__G__starmIupc_180_0_70, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCWestADC",1164,G__G__starmIupc_180_0_71, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - pmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCEastTDC",1161,G__G__starmIupc_180_0_72, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCWestTDC",1183,G__G__starmIupc_180_0_73, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZDCTimeDiff",1321,G__G__starmIupc_180_0_74, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZdcVertexZ",1337,G__G__starmIupc_180_0_75, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", "convert from mm to cm", (void*) NULL, 0);
   G__memfunc_setup("getZdcSMDEast",1234,G__G__starmIupc_180_0_76, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - verthori i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZdcSMDWest",1256,G__G__starmIupc_180_0_77, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - verthori i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBBCSmallEast",1421,G__G__starmIupc_180_0_78, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBBCSmallWest",1443,G__G__starmIupc_180_0_79, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBBCLargeEast",1407,G__G__starmIupc_180_0_80, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBBCLargeWest",1429,G__G__starmIupc_180_0_81, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVPDSumEast",1260,G__G__starmIupc_180_0_82, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVPDSumWest",1282,G__G__starmIupc_180_0_83, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVPDTimeDiff",1330,G__G__starmIupc_180_0_84, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTOFMultiplicity",1842,G__G__starmIupc_180_0_85, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBEMCMultiplicity",1888,G__G__starmIupc_180_0_86, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNGlobTracks",1402,G__G__starmIupc_180_0_87, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPrimTracks",1422,G__G__starmIupc_180_0_88, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNPrimVertices",1643,G__G__starmIupc_180_0_89, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfTracks",1734,G__G__starmIupc_180_0_90, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__G__starmIupc_180_0_91, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTrack), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfClusters",1971,G__G__starmIupc_180_0_92, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__G__starmIupc_180_0_93, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iCls", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterId",1231,G__G__starmIupc_180_0_94, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCBemcCluster), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - clsId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeClustersIter",1671,G__G__starmIupc_180_0_95, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TIterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfHits",1526,G__G__starmIupc_180_0_96, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__G__starmIupc_180_0_97, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCTofHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfVertices",1955,G__G__starmIupc_180_0_98, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__G__starmIupc_180_0_99, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iVtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexId",1131,G__G__starmIupc_180_0_100, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCVertex), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - vtxId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeVerticesIter",1655,G__G__starmIupc_180_0_101, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TIterator), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIsMC",652,G__G__starmIupc_180_0_102, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfMCParticles",2197,G__G__starmIupc_180_0_103, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMCParticle",1284,G__G__starmIupc_180_0_104, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TParticle), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCEvent",945,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCEvent), -1, 0, 1, 1, 4, 0, "u 'StUPCEvent' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_180_0_106, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_180_0_107, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_180_0_108, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_180_0_109, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__starmIupc_180_0_110, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__starmIupc_180_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__starmIupc_180_0_112, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_180_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_180_0_114, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_180_0_115, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_180_0_116, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_180_0_117, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCEvent", 1071, G__G__starmIupc_180_0_118, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCRpsCluster(void) {
   /* StUPCRpsCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster));
   G__memfunc_setup("StUPCRpsCluster",1478,G__G__starmIupc_237_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__G__starmIupc_237_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionRMS",1127,G__G__starmIupc_237_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("length",642,G__G__starmIupc_237_0_4, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__G__starmIupc_237_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xy",241,G__G__starmIupc_237_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__G__starmIupc_237_0_7, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("romanPotId",1021,G__G__starmIupc_237_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("planeId",701,G__G__starmIupc_237_0_9, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__G__starmIupc_237_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionRMS",1427,G__G__starmIupc_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLength",942,G__G__starmIupc_237_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__G__starmIupc_237_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXY",509,G__G__starmIupc_237_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__G__starmIupc_237_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPlaneId",1001,G__G__starmIupc_237_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRomanPotId",1321,G__G__starmIupc_237_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_237_0_18, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCRpsCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_237_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_237_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCRpsCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_237_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCRpsCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_237_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_237_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_237_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_237_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_237_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StUPCRpsCluster", 1478, G__G__starmIupc_237_0_30, (int) ('i'), G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster), -1, 0, 1, 1, 1, 0, "u 'StUPCRpsCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StUPCRpsCluster", 1604, G__G__starmIupc_237_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIupc_237_0_32, (int) ('u'), G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster), -1, 1, 1, 1, 1, 0, "u 'StUPCRpsCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCRpsTrack(void) {
   /* StUPCRpsTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack));
   G__memfunc_setup("StUPCRpsTrack",1241,G__G__starmIupc_238_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("planesUsed",1044,G__G__starmIupc_238_0_3, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("theta",534,G__G__starmIupc_238_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaRp",728,G__G__starmIupc_238_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 'rpsAngleTheta' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiRp",515,G__G__starmIupc_238_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIupc_238_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstTrackPointId",2036,G__G__starmIupc_238_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondTrackPointId",2120,G__G__starmIupc_238_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pVec",398,G__G__starmIupc_238_0_10, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("branch",622,G__G__starmIupc_238_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,G__G__starmIupc_238_0_12, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__G__starmIupc_238_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("t",116,G__G__starmIupc_238_0_14, 100, -1, -1, 0, 1, 1, 1, 8, "f - 'Float_t' 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xi",225,G__G__starmIupc_238_0_15, 100, -1, -1, 0, 1, 1, 1, 8, "f - 'Float_t' 0 - beamMomentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("p",112,G__G__starmIupc_238_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__G__starmIupc_238_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__G__starmIupc_238_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEvent",834,G__G__starmIupc_238_0_19, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPoint",1343,G__G__starmIupc_238_0_20, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - station", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstTrackPointId",2048,G__G__starmIupc_238_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSecondTrackPointId",2132,G__G__starmIupc_238_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__G__starmIupc_238_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - P", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBranch",922,G__G__starmIupc_238_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__G__starmIupc_238_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StUPCRpsTrack::StRpsTrackType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvent",846,G__G__starmIupc_238_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StRPEvent' - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCRpsTrack",1241,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack), -1, 0, 1, 1, 4, 0, "u 'StUPCRpsTrack' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack), -1, 1, 1, 1, 4, 0, "u 'StUPCRpsTrack' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_238_0_29, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCRpsTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_238_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_238_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCRpsTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_238_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCRpsTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_238_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_238_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_238_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_238_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_238_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCRpsTrack", 1367, G__G__starmIupc_238_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCRpsTrackPoint(void) {
   /* StUPCRpsTrackPoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint));
   G__memfunc_setup("StUPCRpsTrackPoint",1763,G__G__starmIupc_239_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("planesUsed",1044,G__G__starmIupc_239_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("positionVec",1171,G__G__starmIupc_239_0_4, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rpId",399,G__G__starmIupc_239_0_5, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clusterId",943,G__G__starmIupc_239_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time",431,G__G__starmIupc_239_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__G__starmIupc_239_0_8, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__G__starmIupc_239_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__starmIupc_239_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIupc_239_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__G__starmIupc_239_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpId",699,G__G__starmIupc_239_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - rpId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterId",1243,G__G__starmIupc_239_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - clusterId i - 'Int_t' 0 - planeId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__G__starmIupc_239_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - timeVal h - 'UInt_t' 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuality",1077,G__G__starmIupc_239_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i 'StUPCRpsTrackPoint::StUPCRpsTrackPointQuality' - 0 - quality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCRpsTrackPoint",1763,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 0, 1, 1, 4, 0, "u 'StUPCRpsTrackPoint' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 1, 1, 1, 4, 0, "u 'StUPCRpsTrackPoint' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_239_0_19, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCRpsTrackPoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_239_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrackPoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_239_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCRpsTrackPoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_239_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCRpsTrackPoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_239_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_239_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrackPoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_239_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsTrackPoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_239_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCRpsTrackPoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_239_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCRpsTrackPoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCRpsTrackPoint", 1889, G__G__starmIupc_239_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStRPEvent(void) {
   /* StRPEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent));
   G__memfunc_setup("StRPEvent",875,G__G__starmIupc_240_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StRPEvent",875,G__G__starmIupc_240_0_2, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent), -1, 0, 1, 1, 1, 0, "u 'StRPEvent' - 11 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearEvent",1033,G__G__starmIupc_240_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCluster",1035,G__G__starmIupc_240_0_4, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__G__starmIupc_240_0_5, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrackPoint",1320,G__G__starmIupc_240_0_6, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfClusters",1971,G__G__starmIupc_240_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCluster",1058,G__G__starmIupc_240_0_8, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsCluster), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iCluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusters",1173,G__G__starmIupc_240_0_9, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfTracks",1734,G__G__starmIupc_240_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__G__starmIupc_240_0_11, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrack), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTracks",936,G__G__starmIupc_240_0_12, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfTrackPoints",2256,G__G__starmIupc_240_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPoint",1343,G__G__starmIupc_240_0_14, 85, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCRpsTrackPoint), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - iTrackPoint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPoints",1458,G__G__starmIupc_240_0_15, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSiliconBunch",1549,G__G__starmIupc_240_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__G__starmIupc_240_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumberPlanes",1560,G__G__starmIupc_240_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID r - 'UShort_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumberPlanesWithCluster",2710,G__G__starmIupc_240_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdc",596,G__G__starmIupc_240_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - adc0 "
"r - 'UShort_t' 0 - adc1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTac",612,G__G__starmIupc_240_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - tac0 "
"r - 'UShort_t' 0 - tac1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffset",947,G__G__starmIupc_240_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID "
"f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__G__starmIupc_240_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID "
"f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAngle",819,G__G__starmIupc_240_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID "
"f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOrientation",1496,G__G__starmIupc_240_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID "
"s - 'Short_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__G__starmIupc_240_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID "
"b - 'UChar_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("siliconBunch",1249,G__G__starmIupc_240_0_27, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanes",1441,G__G__starmIupc_240_0_28, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - romanPotID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPlanesWithClusters",2706,G__G__starmIupc_240_0_29, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - romanPotID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__starmIupc_240_0_30, 98, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - romanPotID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adc",296,G__G__starmIupc_240_0_31, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - pmtID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tac",312,G__G__starmIupc_240_0_32, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - pmtID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("offset",647,G__G__starmIupc_240_0_33, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIupc_240_0_34, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angle",519,G__G__starmIupc_240_0_35, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("orientation",1196,G__G__starmIupc_240_0_36, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__G__starmIupc_240_0_37, 98, -1, G__defined_typename("UChar_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - romanPotID h - 'UInt_t' 0 - planeID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StRPEvent), -1, 1, 1, 1, 4, 0, "u 'StRPEvent' - 11 - o", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_240_0_39, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StRPEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_240_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRPEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_240_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StRPEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_240_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StRPEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__starmIupc_240_0_43, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__starmIupc_240_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__starmIupc_240_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_240_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_240_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRPEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_240_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRPEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_240_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StRPEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_240_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StRPEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StRPEvent", 1001, G__G__starmIupc_240_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStPicoHelix(void) {
   /* StPicoHelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix));
   G__memfunc_setup("StPicoHelix",1100,G__G__starmIupc_256_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPicoHelix",1100,G__G__starmIupc_256_0_2, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - c d - 'Double_t' 0 - dip "
"d - 'Double_t' 0 - phase u 'TVector3' - 11 - o "
"i - 'Int_t' 0 '-1' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPicoHelix",1100,G__G__starmIupc_256_0_3, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix), -1, 0, 1, 1, 1, 0, "u 'StPicoHelix' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dipAngle",804,G__G__starmIupc_256_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curvature",993,G__G__starmIupc_256_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phase",529,G__G__starmIupc_256_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("xcenter",761,G__G__starmIupc_256_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ycenter",762,G__G__starmIupc_256_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("h",104,G__G__starmIupc_256_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("origin",648,G__G__starmIupc_256_0_10, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,G__G__starmIupc_256_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - c d - 'Double_t' 0 - dip "
"d - 'Double_t' 0 - phase u 'TVector3' - 11 - o "
"i - 'Int_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__G__starmIupc_256_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__G__starmIupc_256_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("z",122,G__G__starmIupc_256_0_14, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__G__starmIupc_256_0_15, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cx",219,G__G__starmIupc_256_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cy",220,G__G__starmIupc_256_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cz",221,G__G__starmIupc_256_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '0' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cat",312,G__G__starmIupc_256_0_19, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("period",643,G__G__starmIupc_256_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__G__starmIupc_256_0_21, 117, G__get_linked_tagnum(&G__G__starmIupcLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__G__starmIupc_256_0_22, 117, G__get_linked_tagnum(&G__G__starmIupcLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - r d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__G__starmIupc_256_0_23, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - p g - 'Bool_t' 0 'true' scanPeriods", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__G__starmIupc_256_0_24, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - r u 'TVector3' - 11 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLength",1039,G__G__starmIupc_256_0_25, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - X d - 'Double_t' 0 - Y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pathLengths",1154,G__G__starmIupc_256_0_26, 117, G__get_linked_tagnum(&G__G__starmIupcLN_pairlEdoublecOdoublegR), G__defined_typename("pair<Double_t,Double_t>"), 0, 3, 1, 1, 8, 
"u 'StPicoHelix' - 11 - - d - 'Double_t' 0 '10*micrometer' minStepSize "
"d - 'Double_t' 0 '10*centimeter' minRange", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("distance",843,G__G__starmIupc_256_0_27, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - p g - 'Bool_t' 0 'true' scanPeriods", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("valid",528,G__G__starmIupc_256_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '1.e+5' world", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bad",295,G__G__starmIupc_256_0_29, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 '1.e+5' WorldSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("moveOrigin",1055,G__G__starmIupc_256_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setCurvature",1293,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", "/ performs also various checks", (void*) NULL, 0);
   G__memfunc_setup("setPhase",829,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDipAngle",1104,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fudgePathLength",1530,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_256_0_35, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StPicoHelix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_256_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoHelix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_256_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StPicoHelix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_256_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StPicoHelix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__G__starmIupc_256_0_39, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__G__starmIupc_256_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__G__starmIupc_256_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_256_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_256_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoHelix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_256_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPicoHelix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_256_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoHelix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_256_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPicoHelix::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StPicoHelix", 1226, G__G__starmIupc_256_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIupc_256_0_48, (int) ('u'), G__get_linked_tagnum(&G__G__starmIupcLN_StPicoHelix), -1, 1, 1, 1, 1, 0, "u 'StPicoHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStPicoPhysicalHelix(void) {
   /* StPicoPhysicalHelix */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix));
   G__memfunc_setup("StPicoPhysicalHelix",1929,G__G__starmIupc_258_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPicoPhysicalHelix",1929,G__G__starmIupc_258_0_2, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix), -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - - u 'TVector3' - 11 - - "
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StPicoPhysicalHelix",1929,G__G__starmIupc_258_0_3, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - - "
"d - 'Double_t' 0 - - u 'TVector3' - 11 - - "
"i - 'Int_t' 0 '-1' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum",882,G__G__starmIupc_258_0_4, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentumAt",1063,G__G__starmIupc_258_0_5, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__G__starmIupc_258_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curvatureSignedDistance",2406,G__G__starmIupc_258_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("geometricSignedDistance",2372,G__G__starmIupc_258_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("curvatureSignedDistance",2406,G__G__starmIupc_258_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("geometricSignedDistance",2372,G__G__starmIupc_258_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'TVector3' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_258_0_11, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StPicoPhysicalHelix::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_258_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoPhysicalHelix::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_258_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StPicoPhysicalHelix::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_258_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StPicoPhysicalHelix::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_258_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_258_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoPhysicalHelix::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_258_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPicoPhysicalHelix::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_258_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StPicoPhysicalHelix::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_258_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StPicoPhysicalHelix::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StPicoPhysicalHelix", 1929, G__G__starmIupc_258_0_23, (int) ('i'), G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix), -1, 0, 1, 1, 1, 0, "u 'StPicoPhysicalHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StPicoPhysicalHelix", 2055, G__G__starmIupc_258_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__starmIupc_258_0_25, (int) ('u'), G__get_linked_tagnum(&G__G__starmIupcLN_StPicoPhysicalHelix), -1, 1, 1, 1, 1, 0, "u 'StPicoPhysicalHelix' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStUPCV0(void) {
   /* StUPCV0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0));
   G__memfunc_setup("StUPCV0",565,G__G__starmIupc_263_0_1, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCV0",565,G__G__starmIupc_263_0_2, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0), -1, 0, 1, 1, 1, 0, "U 'StUPCV0' - 40 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCV0",565,G__G__starmIupc_263_0_3, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0), -1, 0, 10, 1, 1, 0, 
"U 'StUPCTrack' - 40 - particle1 U 'StUPCTrack' - 40 - particle2 "
"f - - 0 - p1MassHypo f - - 0 - p2MassHypo "
"r - - 0 - p1Idx r - - 0 - p2Idx "
"u 'TVector3' - 41 - vtx D - - 0 - beamLine "
"f - - 0 - bField g - - 0 'true' useStraightLine", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lorentzVector",1409,G__G__starmIupc_263_0_4, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TLorentzVector), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("decayVertex",1156,G__G__starmIupc_263_0_5, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 1, 0, 1, 1, 9, "", "V0 decay vertex", (void*) NULL, 0);
   G__memfunc_setup("prodVertexHypo",1491,G__G__starmIupc_263_0_6, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 1, 0, 1, 1, 9, "", "V0 production vertex ", (void*) NULL, 0);
   G__memfunc_setup("prodPlane",933,G__G__starmIupc_263_0_7, 117, G__get_linked_tagnum(&G__G__starmIupcLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__G__starmIupc_263_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__G__starmIupc_263_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__G__starmIupc_263_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__G__starmIupc_263_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pointingAngle",1359,G__G__starmIupc_263_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", "Pointing angle using input vertex (vtx)", (void*) NULL, 0);
   G__memfunc_setup("pointingAngleHypo",1775,G__G__starmIupc_263_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", "Pointing angle using reconstructed V0 production vertex ", (void*) NULL, 0);
   G__memfunc_setup("pointingAngle",1359,G__G__starmIupc_263_0_14, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TVector3' - 41 - vtx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("decayLength",1128,G__G__starmIupc_263_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", "decay Length using input vertex (vtx)", (void*) NULL, 0);
   G__memfunc_setup("decayLengthHypo",1544,G__G__starmIupc_263_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", "decay Length using reconstructed V0 production vertex", (void*) NULL, 0);
   G__memfunc_setup("decayLength",1128,G__G__starmIupc_263_0_17, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TVector3' - 41 - vtx2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DCABeamLine",965,G__G__starmIupc_263_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", "DCA between V0 straight-line and beam-line", (void*) NULL, 0);
   G__memfunc_setup("particle1Dca",1165,G__G__starmIupc_263_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particle1Dca",1165,G__G__starmIupc_263_0_20, 102, -1, -1, 0, 3, 1, 1, 8, 
"u 'StPicoPhysicalHelix' - 0 - p1Helix u 'TVector3' - 41 - vtx2 "
"f - - 0 - bField", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particle2Dca",1166,G__G__starmIupc_263_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particle2Dca",1166,G__G__starmIupc_263_0_22, 102, -1, -1, 0, 3, 1, 1, 8, 
"u 'StPicoPhysicalHelix' - 0 - p1Helix u 'TVector3' - 41 - vtx2 "
"f - - 0 - bField", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particle1Idx",1194,G__G__starmIupc_263_0_23, 114, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("particle2Idx",1195,G__G__starmIupc_263_0_24, 114, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dcaDaughters",1231,G__G__starmIupc_263_0_25, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaStar",1237,G__G__starmIupc_263_0_26, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaProdPlane",1435,G__G__starmIupc_263_0_27, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("v0x",286,G__G__starmIupc_263_0_28, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("v0y",287,G__G__starmIupc_263_0_29, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("v0z",288,G__G__starmIupc_263_0_30, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("px",232,G__G__starmIupc_263_0_31, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("py",233,G__G__starmIupc_263_0_32, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pz",234,G__G__starmIupc_263_0_33, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DcaToPrimaryVertex",1837,G__G__starmIupc_263_0_34, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("alphaAP",663,G__G__starmIupc_263_0_35, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptAP",373,G__G__starmIupc_263_0_36, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StUPCV0",565,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0), -1, 0, 1, 1, 4, 0, "u 'StUPCV0' - 41 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__G__starmIupcLN_StUPCV0), -1, 1, 1, 1, 4, 0, "u 'StUPCV0' - 41 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__starmIupc_263_0_39, 85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StUPCV0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__starmIupc_263_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCV0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__starmIupc_263_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StUPCV0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__starmIupc_263_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StUPCV0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__starmIupcLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__starmIupc_263_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__starmIupc_263_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCV0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__starmIupc_263_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCV0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__starmIupc_263_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StUPCV0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__starmIupc_263_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StUPCV0::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StUPCV0", 691, G__G__starmIupc_263_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__starmIupc() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__starmIupc() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__starmIupc() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__starmIupcLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCTrack = { "StUPCTrack" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCBemcCluster = { "StUPCBemcCluster" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCTofHit = { "StUPCTofHit" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCVertex = { "StUPCVertex" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCEvent = { "StUPCEvent" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCTrackcLcLFlag = { "StUPCTrack::Flag" , 101 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCTrackcLcLPart = { "StUPCTrack::Part" , 101 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsCluster = { "StUPCRpsCluster" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsTrack = { "StUPCRpsTrack" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsTrackPoint = { "StUPCRpsTrackPoint" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StRPEvent = { "StRPEvent" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType = { "StUPCRpsTrack::StRpsTrackType" , 101 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles = { "StUPCRpsTrack::StRpsAngles" , 101 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality = { "StUPCRpsTrackPoint::StUPCRpsTrackPointQuality" , 101 , -1 };
G__linked_taginfo G__G__starmIupcLN_StPicoHelix = { "StPicoHelix" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__G__starmIupcLN_StPicoPhysicalHelix = { "StPicoPhysicalHelix" , 99 , -1 };
G__linked_taginfo G__G__starmIupcLN_StUPCV0 = { "StUPCV0" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__starmIupc() {
  G__G__starmIupcLN_TClass.tagnum = -1 ;
  G__G__starmIupcLN_TBuffer.tagnum = -1 ;
  G__G__starmIupcLN_TMemberInspector.tagnum = -1 ;
  G__G__starmIupcLN_TObject.tagnum = -1 ;
  G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__starmIupcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIupcLN_TClonesArray.tagnum = -1 ;
  G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__starmIupcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__starmIupcLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__starmIupcLN_StUPCTrack.tagnum = -1 ;
  G__G__starmIupcLN_StUPCBemcCluster.tagnum = -1 ;
  G__G__starmIupcLN_StUPCTofHit.tagnum = -1 ;
  G__G__starmIupcLN_TIterator.tagnum = -1 ;
  G__G__starmIupcLN_StUPCVertex.tagnum = -1 ;
  G__G__starmIupcLN_TParticle.tagnum = -1 ;
  G__G__starmIupcLN_TArrayI.tagnum = -1 ;
  G__G__starmIupcLN_StUPCEvent.tagnum = -1 ;
  G__G__starmIupcLN_TLorentzVector.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__starmIupcLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__starmIupcLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__G__starmIupcLN_TVector3.tagnum = -1 ;
  G__G__starmIupcLN_StUPCTrackcLcLFlag.tagnum = -1 ;
  G__G__starmIupcLN_StUPCTrackcLcLPart.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsCluster.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsTrack.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsTrackPoint.tagnum = -1 ;
  G__G__starmIupcLN_StRPEvent.tagnum = -1 ;
  G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles.tagnum = -1 ;
  G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality.tagnum = -1 ;
  G__G__starmIupcLN_StPicoHelix.tagnum = -1 ;
  G__G__starmIupcLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__G__starmIupcLN_StPicoPhysicalHelix.tagnum = -1 ;
  G__G__starmIupcLN_StUPCV0.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__starmIupc() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCTrack),sizeof(StUPCTrack),-1,294656,(char*)NULL,G__setup_memvarStUPCTrack,G__setup_memfuncStUPCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCBemcCluster),sizeof(StUPCBemcCluster),-1,294656,(char*)NULL,G__setup_memvarStUPCBemcCluster,G__setup_memfuncStUPCBemcCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCTofHit),sizeof(StUPCTofHit),-1,294656,(char*)NULL,G__setup_memvarStUPCTofHit,G__setup_memfuncStUPCTofHit);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TIterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCVertex),sizeof(StUPCVertex),-1,294656,(char*)NULL,G__setup_memvarStUPCVertex,G__setup_memfuncStUPCVertex);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TParticle);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCEvent),sizeof(StUPCEvent),-1,265984,(char*)NULL,G__setup_memvarStUPCEvent,G__setup_memfuncStUPCEvent);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_TVector3);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCTrackcLcLFlag);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCTrackcLcLPart);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsCluster),sizeof(StUPCRpsCluster),-1,292096,(char*)NULL,G__setup_memvarStUPCRpsCluster,G__setup_memfuncStUPCRpsCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsTrack),sizeof(StUPCRpsTrack),-1,294656,(char*)NULL,G__setup_memvarStUPCRpsTrack,G__setup_memfuncStUPCRpsTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsTrackPoint),sizeof(StUPCRpsTrackPoint),-1,294656,(char*)NULL,G__setup_memvarStUPCRpsTrackPoint,G__setup_memfuncStUPCRpsTrackPoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StRPEvent),sizeof(StRPEvent),-1,265984,(char*)NULL,G__setup_memvarStRPEvent,G__setup_memfuncStRPEvent);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsTrackType);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsTrackcLcLStRpsAngles);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCRpsTrackPointcLcLStUPCRpsTrackPointQuality);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StPicoHelix),sizeof(StPicoHelix),-1,296704,(char*)NULL,G__setup_memvarStPicoHelix,G__setup_memfuncStPicoHelix);
   G__get_linked_tagnum_fwd(&G__G__starmIupcLN_pairlEdoublecOdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StPicoPhysicalHelix),sizeof(StPicoPhysicalHelix),-1,296192,(char*)NULL,G__setup_memvarStPicoPhysicalHelix,G__setup_memfuncStPicoPhysicalHelix);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__starmIupcLN_StUPCV0),sizeof(StUPCV0),-1,327424,(char*)NULL,G__setup_memvarStUPCV0,G__setup_memfuncStUPCV0);
}
extern "C" void G__cpp_setupG__starmIupc(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__starmIupc()");
  G__set_cpp_environmentG__starmIupc();
  G__cpp_setup_tagtableG__starmIupc();

  G__cpp_setup_inheritanceG__starmIupc();

  G__cpp_setup_typetableG__starmIupc();

  G__cpp_setup_memvarG__starmIupc();

  G__cpp_setup_memfuncG__starmIupc();
  G__cpp_setup_globalG__starmIupc();
  G__cpp_setup_funcG__starmIupc();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__starmIupc();
  return;
}
class G__cpp_setup_initG__starmIupc {
  public:
    G__cpp_setup_initG__starmIupc() { G__add_setup_func("G__starmIupc",(G__incsetup)(&G__cpp_setupG__starmIupc)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__starmIupc() { G__remove_setup_func("G__starmIupc"); }
};
G__cpp_setup_initG__starmIupc G__cpp_setup_initializerG__starmIupc;

